{"abi":[{"constant":true,"inputs":[],"name":"assetProducingRegistry","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_userRegistry","type":"address"},{"name":"_assetProducingRegistry","type":"address"},{"name":"_assetConsumingRegistry","type":"address"},{"name":"_assetProducingDB","type":"address"},{"name":"_assetConsumingDB","type":"address"}],"name":"init","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"assetConsumingRegistry","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"userRegistry","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"maxMatcherPerAsset","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_newOwner","type":"address"}],"name":"changeOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_assetProducingRegistry","type":"address"},{"name":"_assetConsumingRegistry","type":"address"}],"name":"update","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_newOwner","type":"address"}],"name":"LogChangeOwner","type":"event"}],"bytecode":"608060405234801561001057600080fd5b5060008054600160a060020a03191633179055600a6004556108e0806100376000396000f3fe608060405234801561001057600080fd5b50600436106100a5576000357c010000000000000000000000000000000000000000000000000000000090048063891c51a511610078578063891c51a5146101285780638da5cb5b14610142578063a6f9dae11461014a578063c640752d14610170576100a5565b806324a793c4146100aa578063359ef75b146100ce578063435b26be146101185780635c7460d614610120575b600080fd5b6100b261019e565b60408051600160a060020a039092168252519081900360200190f35b610116600480360360a08110156100e457600080fd5b50600160a060020a038135811691602081013582169160408201358116916060810135821691608090910135166101ad565b005b6100b2610545565b6100b2610554565b610130610563565b60408051918252519081900360200190f35b6100b2610569565b6101166004803603602081101561016057600080fd5b5035600160a060020a0316610578565b6101166004803603604081101561018657600080fd5b50600160a060020a03813581169160200135166106c9565b600254600160a060020a031690565b600054600160a060020a0316331461022657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f6d73672e73656e646572206973206e6f74206f776e6572000000000000000000604482015290519081900360640190fd5b600160a060020a038516158015906102465750600160a060020a03841615155b801561025a5750600160a060020a03831615155b801561026f5750600354600160a060020a0316155b80156102845750600254600160a060020a0316155b80156102995750600154600160a060020a0316155b151561030657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f616c726561646e7920696e697469616c697a6564000000000000000000000000604482015290519081900360640190fd5b600160a060020a038216151561037d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f617373657450726f647563696e6744422063616e6e6f74206265203000000000604482015290519081900360640190fd5b600160a060020a03811615156103f457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6173736574436f6e73756d696e6744422063616e6e6f74206265203000000000604482015290519081900360640190fd5b60038054600160a060020a0380881673ffffffffffffffffffffffffffffffffffffffff199283161790925560028054878416908316179081905560018054878516931692909217909155604080517ff09a401600000000000000000000000000000000000000000000000000000000815285841660048201523360248201529051919092169163f09a401691604480830192600092919082900301818387803b1580156104a157600080fd5b505af11580156104b5573d6000803e3d6000fd5b5050600154604080517ff09a4016000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152336024830152915191909216935063f09a40169250604480830192600092919082900301818387803b15801561052657600080fd5b505af115801561053a573d6000803e3d6000fd5b505050505050505050565b600154600160a060020a031690565b600354600160a060020a031690565b60045490565b600054600160a060020a031681565b600054600160a060020a031633146105f157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f6d73672e73656e646572206973206e6f74206f776e6572000000000000000000604482015290519081900360640190fd5b600160a060020a038116151561066857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f307830206173206f776e6572206e6f7420616c6c6f7765640000000000000000604482015290519081900360640190fd5b60008054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff19909116811790915560408051918252517f95fd54179c11867fb083dd94347ea50f144dd4cfd7612b7bca169f162824af169181900360200190a150565b600054600160a060020a0316331461074257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f6d73672e73656e646572206973206e6f74206f776e6572000000000000000000604482015290519081900360640190fd5b600160a060020a038216156107f957600254604080517f1c1b8772000000000000000000000000000000000000000000000000000000008152600160a060020a03858116600483015291519190921691631c1b877291602480830192600092919082900301818387803b1580156107b857600080fd5b505af11580156107cc573d6000803e3d6000fd5b50506002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03861617905550505b600160a060020a038116156108b057600154604080517f1c1b8772000000000000000000000000000000000000000000000000000000008152600160a060020a03848116600483015291519190921691631c1b877291602480830192600092919082900301818387803b15801561086f57600080fd5b505af1158015610883573d6000803e3d6000fd5b50506001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03851617905550505b505056fea165627a7a72305820c95a61d3ca25eda74a806fc5006bc1966f12abed63bcb9433c1488b8f0e0b46b0029","contractName":"AssetContractLookup","deployedBytecode":"608060405234801561001057600080fd5b50600436106100a5576000357c010000000000000000000000000000000000000000000000000000000090048063891c51a511610078578063891c51a5146101285780638da5cb5b14610142578063a6f9dae11461014a578063c640752d14610170576100a5565b806324a793c4146100aa578063359ef75b146100ce578063435b26be146101185780635c7460d614610120575b600080fd5b6100b261019e565b60408051600160a060020a039092168252519081900360200190f35b610116600480360360a08110156100e457600080fd5b50600160a060020a038135811691602081013582169160408201358116916060810135821691608090910135166101ad565b005b6100b2610545565b6100b2610554565b610130610563565b60408051918252519081900360200190f35b6100b2610569565b6101166004803603602081101561016057600080fd5b5035600160a060020a0316610578565b6101166004803603604081101561018657600080fd5b50600160a060020a03813581169160200135166106c9565b600254600160a060020a031690565b600054600160a060020a0316331461022657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f6d73672e73656e646572206973206e6f74206f776e6572000000000000000000604482015290519081900360640190fd5b600160a060020a038516158015906102465750600160a060020a03841615155b801561025a5750600160a060020a03831615155b801561026f5750600354600160a060020a0316155b80156102845750600254600160a060020a0316155b80156102995750600154600160a060020a0316155b151561030657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f616c726561646e7920696e697469616c697a6564000000000000000000000000604482015290519081900360640190fd5b600160a060020a038216151561037d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f617373657450726f647563696e6744422063616e6e6f74206265203000000000604482015290519081900360640190fd5b600160a060020a03811615156103f457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6173736574436f6e73756d696e6744422063616e6e6f74206265203000000000604482015290519081900360640190fd5b60038054600160a060020a0380881673ffffffffffffffffffffffffffffffffffffffff199283161790925560028054878416908316179081905560018054878516931692909217909155604080517ff09a401600000000000000000000000000000000000000000000000000000000815285841660048201523360248201529051919092169163f09a401691604480830192600092919082900301818387803b1580156104a157600080fd5b505af11580156104b5573d6000803e3d6000fd5b5050600154604080517ff09a4016000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152336024830152915191909216935063f09a40169250604480830192600092919082900301818387803b15801561052657600080fd5b505af115801561053a573d6000803e3d6000fd5b505050505050505050565b600154600160a060020a031690565b600354600160a060020a031690565b60045490565b600054600160a060020a031681565b600054600160a060020a031633146105f157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f6d73672e73656e646572206973206e6f74206f776e6572000000000000000000604482015290519081900360640190fd5b600160a060020a038116151561066857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f307830206173206f776e6572206e6f7420616c6c6f7765640000000000000000604482015290519081900360640190fd5b60008054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff19909116811790915560408051918252517f95fd54179c11867fb083dd94347ea50f144dd4cfd7612b7bca169f162824af169181900360200190a150565b600054600160a060020a0316331461074257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f6d73672e73656e646572206973206e6f74206f776e6572000000000000000000604482015290519081900360640190fd5b600160a060020a038216156107f957600254604080517f1c1b8772000000000000000000000000000000000000000000000000000000008152600160a060020a03858116600483015291519190921691631c1b877291602480830192600092919082900301818387803b1580156107b857600080fd5b505af11580156107cc573d6000803e3d6000fd5b50506002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03861617905550505b600160a060020a038116156108b057600154604080517f1c1b8772000000000000000000000000000000000000000000000000000000008152600160a060020a03848116600483015291519190921691631c1b877291602480830192600092919082900301818387803b15801561086f57600080fd5b505af1158015610883573d6000803e3d6000fd5b50506001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03851617905550505b505056fea165627a7a72305820c95a61d3ca25eda74a806fc5006bc1966f12abed63bcb9433c1488b8f0e0b46b0029","source":"// Copyright 2018 Energy Web Foundation\n// This file is part of the Origin Application brought to you by the Energy Web Foundation,\n// a global non-profit organization focused on accelerating blockchain technology across the energy sector,\n// incorporated in Zug, Switzerland.\n//\n// The Origin Application is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// This is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY and without an implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details, at <http://www.gnu.org/licenses/>.\n//\n// @authors: slock.it GmbH; Martin Kuechler, martin.kuchler@slock.it; Heiko Burkhardt, heiko.burkhardt@slock.it\n\npragma solidity ^0.5.0;\n\nimport \"ew-utils-general-contracts/contracts/Msc/Owned.sol\";\nimport \"ew-utils-general-contracts/contracts/Interfaces/Updatable.sol\";\nimport \"ew-user-registry-contracts/contracts/Interfaces/UserContractLookupInterface.sol\";\nimport \"../contracts/Interfaces/AssetContractLookupInterface.sol\";\n\n/// @title Contract for storing the current logic-contracts-addresses for the certificate of origin\ncontract AssetContractLookup is Owned, AssetContractLookupInterface {\n\n    Updatable private assetConsumingRegistryContract;\n    Updatable private assetProducingRegistryContract;\n    UserContractLookupInterface private userRegistryContract;\n\n    uint private maxMatcherPerAssetNumber;\n\n    /// @notice The constructor\n    constructor() Owned(msg.sender) public{\n        maxMatcherPerAssetNumber = 10;\n    }\n\n    /// @notice function to initialize the contracts, setting the needed contract-addresses\n    /// @param _userRegistry user-registry logic contract address\n    /// @param _assetProducingRegistry asset-registry logic contract address\n    function init(\n        UserContractLookupInterface _userRegistry,\n        Updatable _assetProducingRegistry,\n        Updatable _assetConsumingRegistry,\n        address _assetProducingDB,\n        address _assetConsumingDB\n    )\n        external\n        onlyOwner\n    {\n        require(\n            address(_userRegistry) != address(0) && address(_assetProducingRegistry) != address(0) && address(_assetConsumingRegistry) != address(0)\n            && address(userRegistryContract) == address(0) && address(assetProducingRegistryContract) == address(0) && address(assetConsumingRegistryContract) == address(0),\n            \"alreadny initialized\"\n        );\n        require(_assetProducingDB != address(0), \"assetProducingDB cannot be 0\");\n        require(_assetConsumingDB != address(0), \"assetConsumingDB cannot be 0\");\n\n        userRegistryContract = _userRegistry;\n        assetProducingRegistryContract = _assetProducingRegistry;\n        assetConsumingRegistryContract = _assetConsumingRegistry;\n\n        assetProducingRegistryContract.init(_assetProducingDB, msg.sender);\n        assetConsumingRegistryContract.init(_assetConsumingDB, msg.sender);\n    }\n\n    /// @notice function to update one or more logic-contracts\n    /// @param _assetProducingRegistry address of the new asset-registry-logic-contract\n    function update(\n        Updatable _assetProducingRegistry,\n        Updatable _assetConsumingRegistry\n    )\n        external\n        onlyOwner\n    {\n        if (address(_assetProducingRegistry) != address(0)) {\n            assetProducingRegistryContract.update(address(_assetProducingRegistry));\n            assetProducingRegistryContract = _assetProducingRegistry;\n        }\n\n        if(address(_assetConsumingRegistry) != address(0)) {\n            assetConsumingRegistryContract.update(address(_assetConsumingRegistry));\n            assetConsumingRegistryContract = _assetConsumingRegistry;\n        }\n    }\n\n    function assetConsumingRegistry() external view returns (address){\n        return address(assetConsumingRegistryContract);\n    }\n\n    function assetProducingRegistry() external view returns (address){\n        return address(assetProducingRegistryContract);\n    }\n\n    function maxMatcherPerAsset() external view returns (uint){\n        return maxMatcherPerAssetNumber;\n    }\n\n    function userRegistry() external view returns (address){\n        return address(userRegistryContract);\n    }\n\n}\n","networks":"{}"}