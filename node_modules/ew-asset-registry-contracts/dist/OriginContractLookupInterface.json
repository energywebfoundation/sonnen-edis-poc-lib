{"abi":[{"constant":true,"inputs":[],"name":"assetContractLookup","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"originLogicRegistry","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"maxMatcherPerCertificate","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"bytecode":"","contractName":"OriginContractLookupInterface","deployedBytecode":"","source":"// Copyright 2018 Energy Web Foundation\n// This file is part of the Origin Application brought to you by the Energy Web Foundation,\n// a global non-profit organization focused on accelerating blockchain technology across the energy sector,\n// incorporated in Zug, Switzerland.\n//\n// The Origin Application is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// This is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY and without an implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details, at <http://www.gnu.org/licenses/>.\n//\n// @authors: slock.it GmbH; Martin Kuechler, martin.kuchler@slock.it; Heiko Burkhardt, heiko.burkhardt@slock.it;\n\npragma solidity ^0.5.2;\npragma experimental ABIEncoderV2;\n\ninterface OriginContractLookupInterface {\n\n    /// @notice gets the originLogic-contract (CertificateLogic/EnergyLogic/EnergyCertificatesBundle)\n    /// @return the address of the origin-logic contract\n    function originLogicRegistry() external view returns (address);\n\n    /// @notice gets the assetContractLookupRegistry-contract address\n    /// @return the assetContractLookupRegistry-contract address\n    function assetContractLookup() external view returns (address);\n\n    /// @notice gets the maximum amount of allowed matcher per certificate\n    /// @return the maximum amount of allowed matcher per certificate\n    function maxMatcherPerCertificate() external view returns (uint);\n}\n","networks":"{}"}