{ "abi": [{ "constant": true, "inputs": [], "name": "userContractLookup", "outputs": [{ "name": "", "type": "address" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "owner", "outputs": [{ "name": "", "type": "address" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "_newOwner", "type": "address" }], "name": "changeOwner", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [{ "name": "_role", "type": "uint8" }, { "name": "_caller", "type": "address" }], "name": "isRole", "outputs": [{ "name": "", "type": "bool" }], "payable": false, "stateMutability": "view", "type": "function" }, { "inputs": [{ "name": "_userContractLookup", "type": "address" }, { "name": "_owner", "type": "address" }], "payable": false, "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [{ "indexed": false, "name": "_newOwner", "type": "address" }], "name": "LogChangeOwner", "type": "event" }], "bytecode": "608060405234801561001057600080fd5b506040516040806104eb8339810180604052604081101561003057600080fd5b50805160209091015160008054600160a060020a03928316600160a060020a03199182161790915560018054929093169116179055610477806100746000396000f3fe608060405234801561001057600080fd5b5060043610610068577c0100000000000000000000000000000000000000000000000000000000600035046344724c8c811461006d5780638da5cb5b1461009e578063a6f9dae1146100a6578063bb5a389e146100db575b600080fd5b61007561012b565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b610075610147565b6100d9600480360360208110156100bc57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610163565b005b610117600480360360408110156100f157600080fd5b50803560ff16906020013573ffffffffffffffffffffffffffffffffffffffff166102db565b604080519115158252519081900360200190f35b60015473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101e957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f6d73672e73656e646572206973206e6f74206f776e6572000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116151561026d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f307830206173206f776e6572206e6f7420616c6c6f7765640000000000000000604482015290519081900360640190fd5b6000805473ffffffffffffffffffffffffffffffffffffffff831673ffffffffffffffffffffffffffffffffffffffff19909116811790915560408051918252517f95fd54179c11867fb083dd94347ea50f144dd4cfd7612b7bca169f162824af169181900360200190a150565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635c7460d66040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561036257600080fd5b505afa158015610376573d6000803e3d6000fd5b505050506040513d602081101561038c57600080fd5b5051604080517f265209f200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301529151919092169163265209f2916024808301926020929190829003018186803b1580156103fe57600080fd5b505afa158015610412573d6000803e3d6000fd5b505050506040513d602081101561042857600080fd5b50519050600084600581111561043a57fe5b60020a91909116151594935050505056fea165627a7a72305820494634bad347e8e217cae9e3178e8e2bb925085e16d5c1464afc4d5ed05decb10029", "contractName": "RoleManagement", "deployedBytecode": "608060405234801561001057600080fd5b5060043610610068577c0100000000000000000000000000000000000000000000000000000000600035046344724c8c811461006d5780638da5cb5b1461009e578063a6f9dae1146100a6578063bb5a389e146100db575b600080fd5b61007561012b565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b610075610147565b6100d9600480360360208110156100bc57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610163565b005b610117600480360360408110156100f157600080fd5b50803560ff16906020013573ffffffffffffffffffffffffffffffffffffffff166102db565b604080519115158252519081900360200190f35b60015473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101e957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f6d73672e73656e646572206973206e6f74206f776e6572000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116151561026d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f307830206173206f776e6572206e6f7420616c6c6f7765640000000000000000604482015290519081900360640190fd5b6000805473ffffffffffffffffffffffffffffffffffffffff831673ffffffffffffffffffffffffffffffffffffffff19909116811790915560408051918252517f95fd54179c11867fb083dd94347ea50f144dd4cfd7612b7bca169f162824af169181900360200190a150565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635c7460d66040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561036257600080fd5b505afa158015610376573d6000803e3d6000fd5b505050506040513d602081101561038c57600080fd5b5051604080517f265209f200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301529151919092169163265209f2916024808301926020929190829003018186803b1580156103fe57600080fd5b505afa158015610412573d6000803e3d6000fd5b505050506040513d602081101561042857600080fd5b50519050600084600581111561043a57fe5b60020a91909116151594935050505056fea165627a7a72305820494634bad347e8e217cae9e3178e8e2bb925085e16d5c1464afc4d5ed05decb10029", "source": "// Copyright 2018 Energy Web Foundation\n// This file is part of the Origin Application brought to you by the Energy Web Foundation,\n// a global non-profit organization focused on accelerating blockchain technology across the energy sector,\n// incorporated in Zug, Switzerland.\n//\n// The Origin Application is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// This is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY and without an implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details, at <http://www.gnu.org/licenses/>.\n//\n// @authors: slock.it GmbH; Martin Kuechler, martin.kuchler@slock.it; Heiko Burkhardt, heiko.burkhardt@slock.it\n\npragma solidity ^0.5.0;\nimport \"../../contracts/Interfaces/UserContractLookupInterface.sol\";\nimport \"../../contracts/Interfaces/RolesInterface.sol\";\nimport \"ew-utils-general-contracts/contracts/Msc/Owned.sol\";\n\n/// @notice contract for managing the rights and roles\ncontract RoleManagement is Owned{\n\n    /// @notice all possible available roles\n    /*\n    no role:        0x0...0000000\n    UserAdmin:      0x0...-----1 = 1\n    AssetAdmin:     0x0...----1- = 2\n    AgreementAdmin: 0x0...---1-- = 4\n    AssetManager:   0x0...--1--- = 8\n    Tader:          0x0...-1---- = 16\n    Matcher:        0x0...1----- = 32\n    */\n    enum Role{\n        UserAdmin,\n        AssetAdmin,\n        AgreementAdmin, //TODO: remove agreement-Admin\n        AssetManager,\n        Trader,\n        Matcher\n    }\n\n    ///@param contract-lookup for users\n    UserContractLookupInterface public userContractLookup;\n\n    /// @notice modifier for checking if an user is allowed to execute the intended action\n    /// @param _role one of the roles of the enum Role\n    modifier onlyRole (RoleManagement.Role _role) {\n        require (isRole(_role, msg.sender),\"user does not have the required role\");\n        _;\n    }\n\n    /// @notice modifier for checking that only a certain account can do an action\n    /// @param _accountAddress the account that should be allowed to do that action\n    modifier onlyAccount(address _accountAddress) {\n        require(msg.sender == _accountAddress,\"account is not accountAddress\");\n        _;\n    }\n\n    /// @notice modifier that checks, whether an user exists\n    /// @param _user the user that has to be checked for existence\n    modifier userExists(address _user){\n        require(RolesInterface(userContractLookup.userRegistry()).doesUserExist(_user),\"User does not exist\");\n        _;\n    }\n\n    /// @notice modifier that checks, whether a user has a certain role\n    /// @param _role one of the roles of the enum Role\n    /// @param _user the address of the user to be checked for the role\n    modifier userHasRole(RoleManagement.Role _role, address _user){\n        require (isRole(_role, _user),\"user does not have the required role\");\n        _;\n    }\n\n    /// @notice constructor\n    /// @param _userContractLookup contract-lookup instance\n    /// @param _owner the owner of the contract\n    constructor(UserContractLookupInterface _userContractLookup, address _owner) Owned(_owner) public {\n        userContractLookup = _userContractLookup;\n    }\n\n    /// @notice funciton for comparing the role and the needed rights of an user\n    /// @param _role role of a user\n    /// @param _caller the user trying to call the action\n    /// @return whether the user has the corresponding rights for the intended action\n    function isRole(RoleManagement.Role _role, address _caller) public view returns (bool) {\n\n        /// @dev reading the rights for the user from the userDB-contract\n        uint rights = RolesInterface(userContractLookup.userRegistry()).getRolesRights(_caller);\n        /// @dev converting the used enum to the corresponding bitmask\n        uint role = uint(2) ** uint(_role);\n        /// @dev comparing rights and roles, if the result is not 0 the user has the right (bitwise comparison)\n        /// we also don't have to check for a potential overflow here, because the used enum will prevent using roles that do not exist\n        return (rights & role != 0);\n    }\n}\n", "networks": "{}" }
