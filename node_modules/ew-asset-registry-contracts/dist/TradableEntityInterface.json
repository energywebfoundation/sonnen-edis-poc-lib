{"abi":[{"constant":true,"inputs":[{"name":"_interfaceID","type":"bytes4"}],"name":"supportsInterface","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_assetId","type":"uint256"},{"name":"_powerInW","type":"uint256"}],"name":"createTradableEntity","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_entityId","type":"uint256"},{"name":"_price","type":"uint256"}],"name":"setOnChainDirectPurchasePrice","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_entityId","type":"uint256"},{"name":"_tokenContract","type":"address"}],"name":"setTradableToken","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_entityId","type":"uint256"}],"name":"getOnChainDirectPurchasePrice","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_entityId","type":"uint256"}],"name":"getTradableToken","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"}],"bytecode":"","contractName":"TradableEntityInterface","deployedBytecode":"","source":"// Copyright 2018 Energy Web Foundation\n// This file is part of the Origin Application brought to you by the Energy Web Foundation,\n// a global non-profit organization focused on accelerating blockchain technology across the energy sector,\n// incorporated in Zug, Switzerland.\n//\n// The Origin Application is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// This is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY and without an implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details, at <http://www.gnu.org/licenses/>.\n//\n// @authors: slock.it GmbH; Martin Kuechler, martin.kuchler@slock.it; Heiko Burkhardt, heiko.burkhardt@slock.it;\n\npragma solidity ^0.5.0;\npragma experimental ABIEncoderV2;\n\ninterface TradableEntityInterface {\n\n\n    /// @notice creates a tradable entity\n    /// @param _assetId the id of the asset that produced the energy\n    /// @param _powerInW the amount of energy produced\n    /// @return the id of the newly created entity\n    function createTradableEntity(uint _assetId, uint _powerInW) external returns (uint);\n    \n    /// @notice sets the tradable token (ERC20 contract) for an entity\n    /// @param _entityId the id of the entity\n    /// @param _tokenContract the ERC20 token contract\n    function setTradableToken(uint _entityId, address _tokenContract) external;\n\n    /// @notice sets the onchain direct purchase price for an entity\n    /// @param _entityId the id of the entity\n    /// @param _price the price of the entity\n    function setOnChainDirectPurchasePrice(uint _entityId, uint _price) external;\n\n    /// @notice gets the tradable token (ERC20 contract) for an entity\n    /// @param _entityId the id of the entity\n    /// @return the address of the ERC20 token contract\n    function getTradableToken(uint _entityId) external view returns (address);\n\n    /// @notice gets the onchain direct purchase price for an entity\n    /// @param _entityId the id of the entity\n    /// @return the onchain direct purchase price for an entity\n    function getOnChainDirectPurchasePrice(uint _entityId) external view returns (uint);\n\n    /// @notice returns whether the contracts supports the provided interface-id\n    /// @param _interfaceID the interface id\n    /// @return true if interaceId == 0x80ac58cd\n    function supportsInterface(bytes4 _interfaceID) external view returns (bool);\n}\n","networks":"{}"}