import * as Configuration from './Configuration';
import { PreciseProofs } from 'ew-utils-general-precise-proofs';
export interface OffChainProperties {
    rootHash: string;
    salts: string[];
    schema: string[];
}
export interface OnChainProperties {
    propertiesDocumentHash: string;
    url: string;
}
export declare abstract class Entity {
    id: string;
    configuration: Configuration.Entity;
    proofs: PreciseProofs.Proof[];
    constructor(id: string, configuration: Configuration.Entity);
    addProof(proof: PreciseProofs.Proof): void;
    abstract getUrl(): string;
    prepareEntityCreation(onChainProperties: OnChainProperties, offChainProperties: any, schema: any, url?: string, debug?: boolean): OffChainProperties;
    putToOffChainStorage(properties: any, offChainStorageProperties: OffChainProperties, url?: string): Promise<void>;
    getOffChainProperties(hash: string, url?: string, debug?: boolean): Promise<any>;
    verifyOffChainProperties(rootHash: string, properties: any, schema: string[], debug: boolean): void;
    abstract sync(): Promise<Entity>;
    protected generateAndAddProofs(properties: any, debug: boolean, salts?: string[]): OffChainProperties;
}
