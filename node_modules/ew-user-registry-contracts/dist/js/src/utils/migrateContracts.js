"use strict";
// Copyright 2018 Energy Web Foundation
// This file is part of the Origin Application brought to you by the Energy Web Foundation,
// a global non-profit organization focused on accelerating blockchain technology across the energy sector,
// incorporated in Zug, Switzerland.
//
// The Origin Application is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// This is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY and without an implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details, at <http://www.gnu.org/licenses/>.
//
// @authors: slock.it GmbH; Martin Kuechler, martin.kuchler@slock.it; Heiko Burkhardt, heiko.burkhardt@slock.it
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const UserContractLookup_1 = require("../wrappedContracts/UserContractLookup");
const UserDB_json_1 = __importDefault(require("../../contract-build/UserDB.json"));
const UserLogic_json_1 = __importDefault(require("../../contract-build/UserLogic.json"));
const __1 = require("..");
const ew_utils_deployment_1 = require("ew-utils-deployment");
function migrateUserRegistryContracts(web3, deployKey) {
    return __awaiter(this, void 0, void 0, function* () {
        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
            // const configFile = JSON.parse(fs.readFileSync('connection-config.json', 'utf8'));
            const privateKeyDeployment = deployKey.startsWith('0x') ?
                deployKey : '0x' + deployKey;
            const userContractLookupAddress = (yield ew_utils_deployment_1.deploy(web3, __1.UserContractLookupJSON.bytecode, { privateKey: privateKeyDeployment })).contractAddress;
            const userLogicAddress = (yield ew_utils_deployment_1.deploy(web3, UserLogic_json_1.default.bytecode + web3.eth.abi.encodeParameter('address', userContractLookupAddress).substr(2), { privateKey: privateKeyDeployment })).contractAddress;
            const userDBAddress = (yield ew_utils_deployment_1.deploy(web3, UserDB_json_1.default.bytecode + web3.eth.abi.encodeParameter('address', userLogicAddress).substr(2), { privateKey: privateKeyDeployment })).contractAddress;
            const userContractLookup = new UserContractLookup_1.UserContractLookup(web3, userContractLookupAddress);
            yield userContractLookup.init(userLogicAddress, userDBAddress, { privateKey: privateKeyDeployment });
            const resultMapping = {};
            resultMapping.UserContractLookup = userContractLookupAddress;
            resultMapping.UserLogic = userLogicAddress;
            resultMapping.UserDB = userDBAddress;
            resolve(resultMapping);
        }));
    });
}
exports.migrateUserRegistryContracts = migrateUserRegistryContracts;
//# sourceMappingURL=migrateContracts.js.map