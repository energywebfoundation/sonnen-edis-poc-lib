{"abi":[{"constant":false,"inputs":[{"name":"_user","type":"address"},{"name":"_organization","type":"string"}],"name":"setOrganization","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_user","type":"address"},{"name":"_roles","type":"uint256"}],"name":"setRoles","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_user","type":"address"},{"name":"_organization","type":"string"}],"name":"setUser","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_user","type":"address"},{"name":"_active","type":"bool"}],"name":"setUserActive","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_newOwner","type":"address"}],"name":"changeOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_user","type":"address"}],"name":"getFullUser","outputs":[{"components":[{"name":"organization","type":"string"},{"name":"roles","type":"uint256"},{"name":"active","type":"bool"}],"name":"user","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_logic","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_newOwner","type":"address"}],"name":"LogChangeOwner","type":"event"}],"bytecode":"608060405234801561001057600080fd5b50604051602080610ae1833981018060405261002f9190810190610067565b60008054600160a060020a031916600160a060020a03929092169190911790556100aa565b6000610060825161008d565b9392505050565b60006020828403121561007957600080fd5b60006100858484610054565b949350505050565b60006100988261009e565b92915050565b600160a060020a031690565b610a28806100b96000396000f3fe608060405234801561001057600080fd5b506004361061009a576000357c01000000000000000000000000000000000000000000000000000000009004806388e084ca1161007857806388e084ca146100da5780638da5cb5b146100ed578063a6f9dae11461010b578063c7af3efc1461011e5761009a565b80630ea6af871461009f57806333a3ad8f146100b45780633f1a51b8146100c7575b600080fd5b6100b26100ad3660046107a0565b61013e565b005b6100b26100c23660046107f6565b610209565b6100b26100d53660046107a0565b610287565b6100b26100e8366004610766565b61031c565b6100f56103a8565b6040516101029190610939565b60405180910390f35b6100b2610119366004610740565b6103c4565b61013161012c366004610740565b6104d4565b604051610102919061096d565b60005473ffffffffffffffffffffffffffffffffffffffff163314610198576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018f9061095d565b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316600090815260016020526040902060020154839060ff1615156101d157600080fd5b73ffffffffffffffffffffffffffffffffffffffff8416600090815260016020526040902061020181858561060d565b505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461025a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018f9061095d565b73ffffffffffffffffffffffffffffffffffffffff90911660009081526001602081905260409091200155565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018f9061095d565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260016020526040902061030881848461060d565b50600201805460ff19166001179055505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461036d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018f9061095d565b73ffffffffffffffffffffffffffffffffffffffff919091166000908152600160205260409020600201805460ff1916911515919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff163314610415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018f9061095d565b73ffffffffffffffffffffffffffffffffffffffff81161515610464576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018f9061094d565b6000805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff83161790556040517f95fd54179c11867fb083dd94347ea50f144dd4cfd7612b7bca169f162824af16906104c9908390610939565b60405180910390a150565b6104dc61068b565b60005473ffffffffffffffffffffffffffffffffffffffff16331461052d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018f9061095d565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600160208181526040928390208351815460029481161561010002600019011693909304601f8101839004909202830160809081019094526060830182815292939092849290918491908401828280156105e45780601f106105b9576101008083540402835291602001916105e4565b820191906000526020600020905b8154815290600101906020018083116105c757829003601f168201915b50505091835250506001820154602082015260029091015460ff16151560409091015292915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061064e5782800160ff1982351617855561067b565b8280016001018555821561067b579182015b8281111561067b578235825591602001919060010190610660565b506106879291506106af565b5090565b60606040519081016040528060608152602001600081526020016000151581525090565b6106c991905b8082111561068757600081556001016106b5565b90565b60006106d8823561098b565b9392505050565b60006106d88235610996565b600080601f830184136106fd57600080fd5b50813567ffffffffffffffff81111561071557600080fd5b60208301915083600182028301111561072d57600080fd5b9250929050565b60006106d882356106c9565b60006020828403121561075257600080fd5b600061075e84846106cc565b949350505050565b6000806040838503121561077957600080fd5b600061078585856106cc565b9250506020610796858286016106df565b9150509250929050565b6000806000604084860312156107b557600080fd5b60006107c186866106cc565b935050602084013567ffffffffffffffff8111156107de57600080fd5b6107ea868287016106eb565b92509250509250925092565b6000806040838503121561080957600080fd5b600061081585856106cc565b925050602061079685828601610734565b61082f8161098b565b82525050565b61082f81610996565b60006108498261097e565b6108538185610982565b93506108638185602086016109b4565b61086c816109e4565b9093019392505050565b6000610883601883610982565b7f307830206173206f776e6572206e6f7420616c6c6f7765640000000000000000815260200192915050565b60006108bc601783610982565b7f6d73672e73656e646572206973206e6f74206f776e6572000000000000000000815260200192915050565b8051606080845260009190840190610900828261083e565b91505060208301516109156020860182610930565b5060408301516109286040860182610835565b509392505050565b61082f816106c9565b602081016109478284610826565b92915050565b6020808252810161094781610876565b60208082528101610947816108af565b602080825281016106d881846108e8565b5190565b90815260200190565b60006109478261099b565b151590565b73ffffffffffffffffffffffffffffffffffffffff1690565b60005b838110156109cf5781810151838201526020016109b7565b838111156109de576000848401525b50505050565b601f01601f19169056fea265627a7a723058207b7b5ddedfaab6d39ca189c32e1719df4b204fba61acbe75a8bc4c3dde93933d6c6578706572696d656e74616cf50037","contractName":"UserDB","deployedBytecode":"608060405234801561001057600080fd5b506004361061009a576000357c01000000000000000000000000000000000000000000000000000000009004806388e084ca1161007857806388e084ca146100da5780638da5cb5b146100ed578063a6f9dae11461010b578063c7af3efc1461011e5761009a565b80630ea6af871461009f57806333a3ad8f146100b45780633f1a51b8146100c7575b600080fd5b6100b26100ad3660046107a0565b61013e565b005b6100b26100c23660046107f6565b610209565b6100b26100d53660046107a0565b610287565b6100b26100e8366004610766565b61031c565b6100f56103a8565b6040516101029190610939565b60405180910390f35b6100b2610119366004610740565b6103c4565b61013161012c366004610740565b6104d4565b604051610102919061096d565b60005473ffffffffffffffffffffffffffffffffffffffff163314610198576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018f9061095d565b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316600090815260016020526040902060020154839060ff1615156101d157600080fd5b73ffffffffffffffffffffffffffffffffffffffff8416600090815260016020526040902061020181858561060d565b505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461025a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018f9061095d565b73ffffffffffffffffffffffffffffffffffffffff90911660009081526001602081905260409091200155565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018f9061095d565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260016020526040902061030881848461060d565b50600201805460ff19166001179055505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461036d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018f9061095d565b73ffffffffffffffffffffffffffffffffffffffff919091166000908152600160205260409020600201805460ff1916911515919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff163314610415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018f9061095d565b73ffffffffffffffffffffffffffffffffffffffff81161515610464576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018f9061094d565b6000805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff83161790556040517f95fd54179c11867fb083dd94347ea50f144dd4cfd7612b7bca169f162824af16906104c9908390610939565b60405180910390a150565b6104dc61068b565b60005473ffffffffffffffffffffffffffffffffffffffff16331461052d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018f9061095d565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600160208181526040928390208351815460029481161561010002600019011693909304601f8101839004909202830160809081019094526060830182815292939092849290918491908401828280156105e45780601f106105b9576101008083540402835291602001916105e4565b820191906000526020600020905b8154815290600101906020018083116105c757829003601f168201915b50505091835250506001820154602082015260029091015460ff16151560409091015292915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061064e5782800160ff1982351617855561067b565b8280016001018555821561067b579182015b8281111561067b578235825591602001919060010190610660565b506106879291506106af565b5090565b60606040519081016040528060608152602001600081526020016000151581525090565b6106c991905b8082111561068757600081556001016106b5565b90565b60006106d8823561098b565b9392505050565b60006106d88235610996565b600080601f830184136106fd57600080fd5b50813567ffffffffffffffff81111561071557600080fd5b60208301915083600182028301111561072d57600080fd5b9250929050565b60006106d882356106c9565b60006020828403121561075257600080fd5b600061075e84846106cc565b949350505050565b6000806040838503121561077957600080fd5b600061078585856106cc565b9250506020610796858286016106df565b9150509250929050565b6000806000604084860312156107b557600080fd5b60006107c186866106cc565b935050602084013567ffffffffffffffff8111156107de57600080fd5b6107ea868287016106eb565b92509250509250925092565b6000806040838503121561080957600080fd5b600061081585856106cc565b925050602061079685828601610734565b61082f8161098b565b82525050565b61082f81610996565b60006108498261097e565b6108538185610982565b93506108638185602086016109b4565b61086c816109e4565b9093019392505050565b6000610883601883610982565b7f307830206173206f776e6572206e6f7420616c6c6f7765640000000000000000815260200192915050565b60006108bc601783610982565b7f6d73672e73656e646572206973206e6f74206f776e6572000000000000000000815260200192915050565b8051606080845260009190840190610900828261083e565b91505060208301516109156020860182610930565b5060408301516109286040860182610835565b509392505050565b61082f816106c9565b602081016109478284610826565b92915050565b6020808252810161094781610876565b60208082528101610947816108af565b602080825281016106d881846108e8565b5190565b90815260200190565b60006109478261099b565b151590565b73ffffffffffffffffffffffffffffffffffffffff1690565b60005b838110156109cf5781810151838201526020016109b7565b838111156109de576000848401525b50505050565b601f01601f19169056fea265627a7a723058207b7b5ddedfaab6d39ca189c32e1719df4b204fba61acbe75a8bc4c3dde93933d6c6578706572696d656e74616cf50037","source":"// Copyright 2018 Energy Web Foundation\n// This file is part of the Origin Application brought to you by the Energy Web Foundation,\n// a global non-profit organization focused on accelerating blockchain technology across the energy sector,\n// incorporated in Zug, Switzerland.\n//\n// The Origin Application is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// This is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY and without an implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details, at <http://www.gnu.org/licenses/>.\n//\n// @authors: slock.it GmbH; Martin Kuechler, martin.kuchler@slock.it; Heiko Burkhardt, heiko.burkhardt@slock.it\n\npragma solidity ^0.5.0;\npragma experimental ABIEncoderV2;\n\nimport \"ew-utils-general-contracts/contracts/Msc/Owned.sol\";\n\n/// @title The database contract for the users, traders and admins of the certificate of origin\n/// @notice This contract only provides getter and setter methods that are only callable by the corresponging owner-contract\ncontract UserDB is Owned {\n\n    struct User {\n        string organization;\n        uint roles;\n        bool active;\n    }\n\n    /// @notice mapping for addresses to users\n    mapping(address => User) private userList;\n\n    /// @notice modifier to check whether a user is already set in the state\n    modifier userExists(address _user) {\n        require(userList[_user].active);\n        _;\n    }\n\n    /// @notice The constructor of the UserDB\n    /// @param _logic the logic contract owning this database contract\n    constructor(address _logic) Owned(_logic) public { }\n\n    /// @notice function to change the name of an existing organization, can only be used when the user already exists\n    /// @dev the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage\n    /// @param _user ethereum-address of an user\n    /// @param _organization new name of the organization\n    function setOrganization(\n        address _user,\n        string calldata _organization\n    )\n        external\n        onlyOwner\n        userExists(_user)\n    {\n        User storage u = userList[_user];\n        u.organization = _organization;\n    }\n\n    /// @notice function for creating, editing an user, it cannot be used to set a Role of an user\n    /// @notice if the user does not exists yet it will be creates, otherwise the older userdata will be overwritten\n    /// @dev the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage\n    /// @param _user address of the user\n    /// @param _organization organization the user is representing\n    function setUser(\n        address _user,\n        string calldata _organization\n    )\n        external\n        onlyOwner\n    {\n        User storage u = userList[_user];\n        u.organization = _organization;\n        u.active = true;\n    }\n\n    /// @notice function to (de-)active a user, dan only be used when the user already exists\n    /// @dev the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage\n    /// @param _user ethereum-address of an user\n    /// @param _active flag if the account should be active\n    function setUserActive(address _user, bool _active) external onlyOwner {\n        User storage u = userList[_user];\n        u.active = _active;\n    }\n\n    /// @notice function for editing the rights of an user\n    /// @dev the onlyOwner-modifier is used, so that only the logic-contract is allowed to write into the storage\n    /// @param _user address of the user\n    /// @param _roles first name of the user\n    function setRoles(address _user, uint _roles) external onlyOwner {\n        User storage u = userList[_user];\n        u.roles = _roles;\n    }\n\n    /// @notice function to return all the data of an user\n    /// @dev the onlyOwner-modifier is used, so that only the logic-contract is allowed to read directly from the contract\n    /// @param _user account of the user to be returned\n    /// @return returns user-struct\n    function getFullUser(address _user)\n        onlyOwner\n        external\n        view\n        returns (\n          User memory user\n        )\n    {\n        return userList[_user];\n    }\n}\n","networks":"{}"}