import * as GeneralLib from 'ew-utils-general-lib';
import * as Asset from './Asset';
import { TransactionReceipt } from 'web3/types';
export interface OnChainProperties extends Asset.OnChainProperties {
    certificatesUsedForWh: number;
}
export declare const createAsset: (assetProperties: OnChainProperties, assetPropertiesOffChain: Asset.OffChainProperties, configuration: GeneralLib.Configuration.Entity) => Promise<Asset.Entity>;
export declare const getAssetListLength: (configuration: GeneralLib.Configuration.Entity) => Promise<number>;
export declare const getAllAssets: (configuration: GeneralLib.Configuration.Entity) => Promise<Entity[]>;
export declare const getAllAssetsOwnedBy: (owner: string, configuration: GeneralLib.Configuration.Entity) => Promise<Entity[]>;
export declare class Entity extends Asset.Entity implements Asset.OnChainProperties {
    getUrl(): string;
    sync(): Promise<Entity>;
    saveSmartMeterRead(newMeterReading: number, fileHash: string): Promise<TransactionReceipt>;
}
