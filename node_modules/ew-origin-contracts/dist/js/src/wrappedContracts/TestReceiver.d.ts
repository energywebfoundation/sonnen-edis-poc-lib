import { GeneralFunctions, SpecialTx } from './GeneralFunctions';
import Web3 = require('web3');
export declare class TestReceiver extends GeneralFunctions {
    web3: Web3;
    buildFile: {
        "abi": ({
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
        } | {
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "constant"?: undefined;
            "name"?: undefined;
            "outputs"?: undefined;
        })[];
        "bytecode": string;
        "contractName": string;
        "deployedBytecode": string;
        "source": string;
        "networks": string;
    };
    constructor(web3: Web3, address?: string);
    onERC721Received(_operator: string, _from: string, _tokenId: number, _data: string, txParams?: SpecialTx): Promise<any>;
    safeTransferFrom(_from: any, _to: any, _entityId: any, _data?: any, txParams?: SpecialTx): Promise<any>;
    entityContract(txParams?: SpecialTx): Promise<any>;
}
