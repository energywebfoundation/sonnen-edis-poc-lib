{ "abi": [{ "constant": true, "inputs": [{ "name": "_entityId", "type": "uint256" }], "name": "getTradableEntityOwner", "outputs": [{ "name": "", "type": "address" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "_entityId", "type": "uint256" }], "name": "getApproved", "outputs": [{ "name": "", "type": "address" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "_entityId", "type": "uint256" }, { "name": "_escrow", "type": "address" }], "name": "addEscrowForEntity", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_entityId", "type": "uint256" }, { "name": "_escrow", "type": "address[]" }], "name": "setTradableEntityEscrowExternal", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [{ "name": "_entityId", "type": "uint256" }], "name": "getTradableEntityEscrowLength", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "_certificateId", "type": "uint256" }, { "name": "_newDataLog", "type": "string" }], "name": "setDataLog", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_certificateId", "type": "uint256" }], "name": "getOwnerChangeCounter", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_certificateId", "type": "uint256" }], "name": "getRetired", "outputs": [{ "name": "", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_entityId", "type": "uint256" }, { "name": "_owner", "type": "address" }, { "name": "_approve", "type": "address" }], "name": "setTradableEntityOwnerAndAddApproval", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_certificateId", "type": "uint256" }, { "name": "_newOwnerChangeCounter", "type": "uint256" }], "name": "setOwnerChangeCounter", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [{ "name": "_certificateId", "type": "uint256" }], "name": "getCertificate", "outputs": [{ "components": [{ "components": [{ "name": "assetId", "type": "uint256" }, { "name": "owner", "type": "address" }, { "name": "powerInW", "type": "uint256" }, { "name": "acceptedToken", "type": "address" }, { "name": "onChainDirectPurchasePrice", "type": "uint256" }, { "name": "escrow", "type": "address[]" }, { "name": "approvedAddress", "type": "address" }], "name": "tradableEntity", "type": "tuple" }, { "components": [{ "name": "retired", "type": "bool" }, { "name": "dataLog", "type": "string" }, { "name": "creationTime", "type": "uint256" }, { "name": "parentId", "type": "uint256" }, { "name": "children", "type": "uint256[]" }, { "name": "maxOwnerChanges", "type": "uint256" }, { "name": "ownerChangeCounter", "type": "uint256" }], "name": "certificateSpecific", "type": "tuple" }], "name": "", "type": "tuple" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "_entityId", "type": "uint256" }, { "name": "_approve", "type": "address" }], "name": "addApprovalExternal", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_entityId", "type": "uint256" }, { "name": "_price", "type": "uint256" }], "name": "setOnChainDirectPurchasePrice", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_assetId", "type": "uint256" }, { "name": "_powerInW", "type": "uint256" }, { "name": "_escrow", "type": "address[]" }, { "name": "_assetOwner", "type": "address" }, { "name": "_lastSmartMeterReadFileHash", "type": "string" }, { "name": "_maxOwnerChanges", "type": "uint256" }], "name": "createCertificateRaw", "outputs": [{ "name": "_certId", "type": "uint256" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [{ "name": "_company", "type": "address" }, { "name": "_escrow", "type": "address" }], "name": "getOwnerToOperators", "outputs": [{ "name": "", "type": "bool" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "_entityId", "type": "uint256" }, { "name": "_owner", "type": "address" }], "name": "setTradableEntityOwnerExternal", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [{ "name": "_entityId", "type": "uint256" }], "name": "getTradableEntity", "outputs": [{ "components": [{ "name": "assetId", "type": "uint256" }, { "name": "owner", "type": "address" }, { "name": "powerInW", "type": "uint256" }, { "name": "acceptedToken", "type": "address" }, { "name": "onChainDirectPurchasePrice", "type": "uint256" }, { "name": "escrow", "type": "address[]" }, { "name": "approvedAddress", "type": "address" }], "name": "", "type": "tuple" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "_certificateId", "type": "uint256" }, { "name": "_childId", "type": "uint256" }], "name": "addChildrenExternal", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "owner", "outputs": [{ "name": "", "type": "address" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "_certificateId", "type": "uint256" }], "name": "getCertificateSpecific", "outputs": [{ "components": [{ "name": "retired", "type": "bool" }, { "name": "dataLog", "type": "string" }, { "name": "creationTime", "type": "uint256" }, { "name": "parentId", "type": "uint256" }, { "name": "children", "type": "uint256[]" }, { "name": "maxOwnerChanges", "type": "uint256" }, { "name": "ownerChangeCounter", "type": "uint256" }], "name": "_certificate", "type": "tuple" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "_owner", "type": "address" }], "name": "getBalanceOf", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "_certificateId", "type": "uint256" }, { "name": "_retired", "type": "bool" }], "name": "setRetired", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_certificateId", "type": "uint256" }, { "name": "_newMaxOwnerChanges", "type": "uint256" }], "name": "setMaxOwnerChanges", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_newOwner", "type": "address" }], "name": "changeOwner", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "getCertificateListLength", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "_certificateId", "type": "uint256" }], "name": "getMaxOwnerChanges", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_entityId", "type": "uint256" }], "name": "removeTokenAndPrice", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_certificateId", "type": "uint256" }, { "name": "_childId", "type": "uint256" }], "name": "addChildren", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_certificateId", "type": "uint256" }, { "components": [{ "name": "retired", "type": "bool" }, { "name": "dataLog", "type": "string" }, { "name": "creationTime", "type": "uint256" }, { "name": "parentId", "type": "uint256" }, { "name": "children", "type": "uint256[]" }, { "name": "maxOwnerChanges", "type": "uint256" }, { "name": "ownerChangeCounter", "type": "uint256" }], "name": "_certificate", "type": "tuple" }], "name": "setCertificateSpecific", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_company", "type": "address" }, { "name": "_escrow", "type": "address" }, { "name": "_allowed", "type": "bool" }], "name": "setOwnerToOperators", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [{ "name": "_certificateId", "type": "uint256" }], "name": "getCertificateChildrenLength", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "_entityId", "type": "uint256" }, { "name": "_escrow", "type": "address" }], "name": "removeEscrow", "outputs": [{ "name": "", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_entityId", "type": "uint256" }, { "components": [{ "name": "assetId", "type": "uint256" }, { "name": "owner", "type": "address" }, { "name": "powerInW", "type": "uint256" }, { "name": "acceptedToken", "type": "address" }, { "name": "onChainDirectPurchasePrice", "type": "uint256" }, { "name": "escrow", "type": "address[]" }, { "name": "approvedAddress", "type": "address" }], "name": "_entity", "type": "tuple" }], "name": "setTradableEntity", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_parentId", "type": "uint256" }, { "name": "_power", "type": "uint256" }], "name": "createChildCertificate", "outputs": [{ "name": "_childIdOne", "type": "uint256" }, { "name": "_childIdTwo", "type": "uint256" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_entityId", "type": "uint256" }, { "name": "_token", "type": "address" }], "name": "setTradableToken", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_certificateId", "type": "uint256" }, { "name": "_newCounter", "type": "uint256" }], "name": "setOwnerChangeCounterResetEscrow", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [{ "name": "_entityId", "type": "uint256" }], "name": "getOnChainDirectPurchasePrice", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "_certificateId", "type": "uint256" }], "name": "getDataLog", "outputs": [{ "name": "", "type": "string" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [{ "name": "_entityId", "type": "uint256" }], "name": "getTradableToken", "outputs": [{ "name": "", "type": "address" }], "payable": false, "stateMutability": "view", "type": "function" }, { "inputs": [{ "name": "_certificateLogic", "type": "address" }], "payable": false, "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [{ "indexed": false, "name": "_newOwner", "type": "address" }], "name": "LogChangeOwner", "type": "event" }], "bytecode": "60806040523480156200001157600080fd5b506040516020806200316283398101806040526200003391908101906200006e565b60008054600160a060020a031916600160a060020a0392909216919091179055620000b6565b600062000067825162000097565b9392505050565b6000602082840312156200008157600080fd5b60006200008f848462000059565b949350505050565b6000620000a482620000aa565b92915050565b600160a060020a031690565b61309c80620000c66000396000f3fe608060405234801561001057600080fd5b50600436106102c9576000357c0100000000000000000000000000000000000000000000000000000000900480638e556bc711610198578063bebc1e9c116100f5578063deadb867116100a9578063e09a72791161008e578063e09a7279146105cb578063e22e3e4b146105de578063fb79224f146105fe576102c9565b8063deadb867146105a5578063e01b1ba2146105b8576102c9565b8063c365d3f0116100da578063c365d3f01461055e578063d45c612d14610571578063de1fabc514610584576102c9565b8063bebc1e9c14610538578063c2d3bc051461054b576102c9565b8063af2773951161014c578063b88c171d11610131578063b88c171d146104ff578063b95e12e714610512578063bc380fef14610525576102c9565b8063af277395146104e4578063b65e6a3c146104ec576102c9565b80639db9df2c1161017d5780639db9df2c146104ab578063a224a84d146104be578063a6f9dae1146104d1576102c9565b80638e556bc7146104785780639b96eece14610498576102c9565b80634f51ef021161024657806372febb79116101fa57806381bd5601116101df57806381bd56011461043d57806383ede6791461045d5780638da5cb5b14610470576102c9565b806372febb791461041757806376e0a8941461042a576102c9565b806351ba60d71161022b57806351ba60d7146103de57806354e3043c146103f157806365a8fc4914610404576102c9565b80634f51ef02146103ab57806351640fee146103be576102c9565b80631273938b1161029d578063171d838811610282578063171d8388146103655780633660f1d9146103785780633f271fe014610398576102c9565b80631273938b1461033257806314663cef14610352576102c9565b80629df41e146102ce578063081812fc146102f75780630d473bd41461030a5780630e4a07e11461031f575b600080fd5b6102e16102dc3660046128b3565b610611565b6040516102ee9190612ec8565b60405180910390f35b6102e16103053660046128b3565b61065b565b61031d6103183660046128d1565b61069c565b005b61031d61032d366004612933565b61071a565b6103456103403660046128b3565b610789565b6040516102ee9190612f58565b61031d6103603660046129b9565b6107cb565b6103456103733660046128b3565b61081a565b61038b6103863660046128b3565b61085b565b6040516102ee9190612ed6565b61031d6103a63660046128f0565b61089c565b61031d6103b9366004612a93565b6108dd565b6103d16103cc3660046128b3565b610916565b6040516102ee9190612f36565b61031d6103ec3660046128d1565b610b6e565b61031d6103ff366004612a93565b610ba9565b610345610412366004612ac3565b610bec565b61038b61042536600461282c565b610cec565b61031d6104383660046128d1565b610d4b565b61045061044b3660046128b3565b610d82565b6040516102ee9190612f47565b61031d61046b366004612a93565b610ea0565b6102e1610ed7565b61048b6104863660046128b3565b610ee6565b6040516102ee9190612f25565b6103456104a6366004612806565b61109e565b61031d6104b9366004612989565b6110e8565b61031d6104cc366004612a93565b611134565b61031d6104df366004612806565b611177565b610345611232565b6103456104fa3660046128b3565b611268565b61031d61050d3660046128b3565b6112a9565b61031d610520366004612a93565b61130a565b61031d610533366004612a03565b61135a565b61031d610546366004612866565b61142f565b6103456105593660046128b3565b611496565b61038b61056c3660046128d1565b6114d7565b61031d61057f366004612a4b565b6115ee565b610597610592366004612a93565b6116fd565b6040516102ee929190612f66565b61031d6105b33660046128d1565b611b48565b61031d6105c6366004612a93565b611bb3565b6103456105d93660046128b3565b611c76565b6105f16105ec3660046128b3565b611cb7565b6040516102ee9190612ee4565b6102e161060c3660046128b3565b611d83565b60008054600160a060020a031633146106485760405160e560020a62461bcd02815260040161063f90612f05565b60405180910390fd5b61065182610d82565b6020015192915050565b60008054600160a060020a031633146106895760405160e560020a62461bcd02815260040161063f90612f05565b61069282610d82565b60c0015192915050565b600054600160a060020a031633146106c95760405160e560020a62461bcd02815260040161063f90612f05565b60006106d483611dc4565b60050180546001810182556000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0393909316929092179091555050565b600054600160a060020a031633146107475760405160e560020a62461bcd02815260040161063f90612f05565b61078483838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ded92505050565b505050565b60008054600160a060020a031633146107b75760405160e560020a62461bcd02815260040161063f90612f05565b6107c082610d82565b60a001515192915050565b600054600160a060020a031633146107f85760405160e560020a62461bcd02815260040161063f90612f05565b600061080384611e16565b905061081360018201848461216b565b5050505050565b60008054600160a060020a031633146108485760405160e560020a62461bcd02815260040161063f90612f05565b61085182611e16565b6006015492915050565b60008054600160a060020a031633146108895760405160e560020a62461bcd02815260040161063f90612f05565b61089282611e16565b5460ff1692915050565b600054600160a060020a031633146108c95760405160e560020a62461bcd02815260040161063f90612f05565b6108d38383611e3f565b6107848382611e85565b600054600160a060020a03163314806108f557503330145b151561090057600080fd5b600061090b83611e16565b600601919091555050565b61091e6121e9565b600054600160a060020a0316331461094b5760405160e560020a62461bcd02815260040161063f90612f05565b600380548390811061095957fe5b60009182526020918290206040805161012081018252600e90930290910180548383019081526001820154600160a060020a0390811660608601526002830154608086015260038301541660a0850152600482015460c08501526005820180548451818802810188019095528085529495929486949293869360e087019390929091830182828015610a1457602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116109f6575b505050918352505060069190910154600160a060020a03166020918201529082526040805160e08101825260078501805460ff1615158252600886018054845160026101006001841615026000190190921691909104601f810187900487028201870190955284815295850195929491938583019392830182828015610adb5780601f10610ab057610100808354040283529160200191610adb565b820191906000526020600020905b815481529060010190602001808311610abe57829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020018280548015610b4757602002820191906000526020600020905b815481526020019060010190808311610b33575b50505091835250506005820154602082015260069091015460409091015290525092915050565b600054600160a060020a03163314610b9b5760405160e560020a62461bcd02815260040161063f90612f05565b610ba58282611e85565b5050565b600054600160a060020a03163314610bd65760405160e560020a62461bcd02815260040161063f90612f05565b6000610be183611dc4565b600401919091555050565b60008054600160a060020a03163314610c1a5760405160e560020a62461bcd02815260040161063f90612f05565b610c22612210565b506040805160e081018252888152600160a060020a03861660208201529081018790526000606082018190526080820181905260a0820187905260c0820152610c6961224b565b60e060405190810160405280600015158152602001868152602001428152602001610c92611232565b81526020016000604051908082528060200260200182016040528015610cc2578160200160208202803883390190505b50815260200185815260200160008152509050610cdf8282611ec3565b9998505050505050505050565b60008054600160a060020a03163314610d1a5760405160e560020a62461bcd02815260040161063f90612f05565b50600160a060020a0380831660009081526002602090815260408083209385168352929052205460ff165b92915050565b600054600160a060020a03163314610d785760405160e560020a62461bcd02815260040161063f90612f05565b610ba58282611e3f565b610d8a612210565b600054600160a060020a0316331480610da257503330145b1515610dc35760405160e560020a62461bcd02815260040161063f90612f15565b6003805483908110610dd157fe5b60009182526020918290206040805160e081018252600e909302909101805483526001810154600160a060020a03908116848601526002820154848401526003820154166060840152600481015460808401526005810180548351818702810187019094528084529394919360a086019392830182828015610e7c57602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610e5e575b505050918352505060069190910154600160a060020a031660209091015292915050565b600054600160a060020a03163314610ecd5760405160e560020a62461bcd02815260040161063f90612f05565b610ba5828261130a565b600054600160a060020a031681565b610eee61224b565b600054600160a060020a0316331480610f0657503330145b1515610f275760405160e560020a62461bcd02815260040161063f90612f15565b600054600160a060020a0316331480610f3f57503330145b1515610f4a57600080fd5b6003805483908110610f5857fe5b60009182526020918290206040805160e0810182526007600e909402909201928301805460ff1615158352600890930180548251601f600260001960018516156101000201909316929092049182018790048702810187019093528083529294858101939083018282801561100e5780601f10610fe35761010080835404028352916020019161100e565b820191906000526020600020905b815481529060010190602001808311610ff157829003601f168201915b5050505050815260200160028201548152602001600382015481526020016004820180548060200260200160405190810160405280929190818152602001828054801561107a57602002820191906000526020600020905b815481526020019060010190808311611066575b50505050508152602001600582015481526020016006820154815250509050919050565b60008054600160a060020a031633146110cc5760405160e560020a62461bcd02815260040161063f90612f05565b50600160a060020a031660009081526001602052604090205490565b600054600160a060020a031633146111155760405160e560020a62461bcd02815260040161063f90612f05565b600061112083611e16565b805460ff1916921515929092179091555050565b600054600160a060020a031633146111615760405160e560020a62461bcd02815260040161063f90612f05565b600061116c83611e16565b600501919091555050565b600054600160a060020a031633146111a45760405160e560020a62461bcd02815260040161063f90612f05565b600160a060020a03811615156111cf5760405160e560020a62461bcd02815260040161063f90612ef5565b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790556040517f95fd54179c11867fb083dd94347ea50f144dd4cfd7612b7bca169f162824af1690611227908390612ec8565b60405180910390a150565b60008054600160a060020a031633146112605760405160e560020a62461bcd02815260040161063f90612f05565b506003545b90565b60008054600160a060020a031633146112965760405160e560020a62461bcd02815260040161063f90612f05565b61129f82611e16565b6005015492915050565b600054600160a060020a031633146112d65760405160e560020a62461bcd02815260040161063f90612f05565b60006112e182611dc4565b60006004820155600301805473ffffffffffffffffffffffffffffffffffffffff191690555050565b600054600160a060020a031633146113375760405160e560020a62461bcd02815260040161063f90612f05565b61134082611e16565b600401805460018101825560009182526020909120015550565b600054600160a060020a031633148061137257503330145b15156113935760405160e560020a62461bcd02815260040161063f90612f15565b806003838154811015156113a357fe5b60009182526020918290208351600e929092020160078101805460ff191692151592909217825583830151805192936113e49360089093019291019061228b565b506040820151600282015560608201516003820155608082015180516114149160048401916020909101906122f9565b5060a0820151600582015560c0909101516006909101555050565b600054600160a060020a0316331461145c5760405160e560020a62461bcd02815260040161063f90612f05565b600160a060020a03928316600090815260026020908152604080832094909516825292909252919020805460ff1916911515919091179055565b60008054600160a060020a031633146114c45760405160e560020a62461bcd02815260040161063f90612f05565b6114cd82611e16565b6004015492915050565b60008054600160a060020a031633146115055760405160e560020a62461bcd02815260040161063f90612f05565b600061151084611dc4565b600501905060005b81548110156115e65783600160a060020a0316828281548110151561153957fe5b600091825260209091200154600160a060020a031614156115de5781548290600019810190811061156657fe5b6000918252602090912001548254600160a060020a039091169083908390811061158c57fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905581546115d2836000198301612333565b50600192505050610d45565b600101611518565b505092915050565b600054600160a060020a031633148061160657503330145b15156116275760405160e560020a62461bcd02815260040161063f90612f15565b8060038381548110151561163757fe5b60009182526020918290208351600e9092020190815582820151600182018054600160a060020a0392831673ffffffffffffffffffffffffffffffffffffffff19918216179091556040850151600284015560608501516003840180549190931691161790556080830151600482015560a0830151805191926116c292600585019290910190612357565b5060c091909101516006909101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039092169190911790555050565b600080548190600160a060020a0316331461172d5760405160e560020a62461bcd02815260040161063f90612f05565b6117356121e9565b600380548690811061174357fe5b60009182526020918290206040805161012081018252600e90930290910180548383019081526001820154600160a060020a0390811660608601526002830154608086015260038301541660a0850152600482015460c08501526005820180548451818802810188019095528085529495929486949293869360e0870193909290918301828280156117fe57602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116117e0575b505050918352505060069190910154600160a060020a03166020918201529082526040805160e08101825260078501805460ff1615158252600886018054845160026101006001841615026000190190921691909104601f8101879004870282018701909552848152958501959294919385830193928301828280156118c55780601f1061189a576101008083540402835291602001916118c5565b820191906000526020600020905b8154815290600101906020018083116118a857829003601f168201915b5050505050815260200160028201548152602001600382015481526020016004820180548060200260200160405190810160405280929190818152602001828054801561193157602002820191906000526020600020905b81548152602001906001019080831161191d575b505050505081526020016005820154815260200160068201548152505081525050905061195c612210565b60e0604051908101604052808360000151600001518152602001836000015160200151600160a060020a031681526020018681526020016000600160a060020a0316815260200160008152602001836000015160a001518152602001836000015160c00151600160a060020a031681525090506119d761224b565b506040805160e08101825260008082526020858101805182015182850152805185015184860152606084018b905284519283529082019093526080820152815160a09081015190820152905160c09081015190820152611a378282611ec3565b9450611a41612210565b60e0604051908101604052808560000151600001518152602001856000015160200151600160a060020a03168152602001888660000151604001510381526020016000600160a060020a0316815260200160008152602001856000015160a001518152602001856000015160c00151600160a060020a03168152509050611ac661224b565b506040805160e08101825260008082526020878101805182015182850152805185015184860152606084018d905284519283529082019093526080820152815160a09081015190820152905160c09081015190820152611b268282611ec3565b9550611b32898861130a565b611b3c898761130a565b50505050509250929050565b600054600160a060020a03163314611b755760405160e560020a62461bcd02815260040161063f90612f05565b6000611b8083611dc4565b600301805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0393909316929092179091555050565b600054600160a060020a0316331480611bcb57503330145b1515611bec5760405160e560020a62461bcd02815260040161063f90612f15565b6040517f4f51ef020000000000000000000000000000000000000000000000000000000081523090634f51ef0290611c2a9085908590600401612f66565b600060405180830381600087803b158015611c4457600080fd5b505af1158015611c58573d6000803e3d6000fd5b5050604080516000815260208101909152610ba59250849150611ded565b60008054600160a060020a03163314611ca45760405160e560020a62461bcd02815260040161063f90612f05565b611cad82610d82565b6080015192915050565b600054606090600160a060020a03163314611ce75760405160e560020a62461bcd02815260040161063f90612f05565b611cf082611e16565b60019081018054604080516020600295841615610100026000190190931694909404601f810183900483028501830190915280845290830182828015611d775780601f10611d4c57610100808354040283529160200191611d77565b820191906000526020600020905b815481529060010190602001808311611d5a57829003601f168201915b50505050509050919050565b60008054600160a060020a03163314611db15760405160e560020a62461bcd02815260040161063f90612f05565b611dba82610d82565b6060015192915050565b6000600382815481101515611dd557fe5b90600052602060002090600e02016000019050919050565b6000611df883611dc4565b8251909150611e109060058301906020850190612357565b50505050565b6000600382815481101515611e2757fe5b90600052602060002090600e02016007019050919050565b6000611e4a83611dc4565b600181018054600160a060020a0385811673ffffffffffffffffffffffffffffffffffffffff1983161790925591925016611e108184612114565b6000611e9083611dc4565b600601805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0393909316929092179091555050565b60408051808201825283815260208082018490526003805460018082018084556000938452855180517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b600e909502948501908155818701517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c8601805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a0393841617909155998301517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d87015560608301517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e87018054909b1691161790985560808101517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85f85015560a081015180519598939792969295939491938593612030937fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f86001920190612357565b5060c091909101516006909101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055602082810151805160078401805460ff19169115159190911781558183015180519293919261209c926008870192019061228b565b506040820151600282015560608201516003820155608082015180516120cc9160048401916020909101906122f9565b5060a0820151600582015560c0909101516006909101555050602094850151600160a060020a0316600090815260019586905260409020805490950190945590920392915050565b600160a060020a0382166000908152600160205260408120541161213757600080fd5b600160a060020a03918216600090815260016020819052604080832080546000190190559290931681522080549091019055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106121ac5782800160ff198235161785556121d9565b828001600101855582156121d9579182015b828111156121d95782358255916020019190600101906121be565b506121e59291506123c5565b5090565b6101c0604051908101604052806121fe612210565b815260200161220b61224b565b905290565b6040805160e08101825260008082526020820181905291810182905260608082018390526080820183905260a082015260c081019190915290565b60e0604051908101604052806000151581526020016060815260200160008152602001600081526020016060815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106122cc57805160ff19168380011785556121d9565b828001600101855582156121d9579182015b828111156121d95782518255916020019190600101906122de565b8280548282559060005260206000209081019282156121d957916020028201828111156121d95782518255916020019190600101906122de565b815481835581811115610784576000838152602090206107849181019083016123c5565b8280548282559060005260206000209081019282156123b9579160200282015b828111156123b9578251825473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909116178255602090920191600190910190612377565b506121e59291506123df565b61126591905b808211156121e557600081556001016123cb565b61126591905b808211156121e557805473ffffffffffffffffffffffffffffffffffffffff191681556001016123e5565b600061241c8235613004565b9392505050565b600080601f8301841361243557600080fd5b50813567ffffffffffffffff81111561244d57600080fd5b60208301915083602082028301111561246557600080fd5b9250929050565b6000601f8201831361247d57600080fd5b813561249061248b82612fa8565b612f81565b915081818352602084019350602081019050838560208402820111156124b557600080fd5b60005b838110156124e157816124cb8882612410565b84525060209283019291909101906001016124b8565b5050505092915050565b6000601f820183136124fc57600080fd5b813561250a61248b82612fa8565b9150818183526020840193506020810190508385602084028201111561252f57600080fd5b60005b838110156124e157816125458882612410565b8452506020928301929190910190600101612532565b6000601f8201831361256c57600080fd5b813561257a61248b82612fa8565b9150818183526020840193506020810190508385602084028201111561259f57600080fd5b60005b838110156124e157816125b588826127fa565b84525060209283019291909101906001016125a2565b600061241c823561300f565b600080601f830184136125e957600080fd5b50813567ffffffffffffffff81111561260157600080fd5b60208301915083600182028301111561246557600080fd5b6000601f8201831361262a57600080fd5b813561263861248b82612fc9565b9150808252602083016020830185838301111561265457600080fd5b61265f838284613020565b50505092915050565b600060e0828403121561267a57600080fd5b61268460e0612f81565b9050600061269284846125cb565b825250602082013567ffffffffffffffff8111156126af57600080fd5b6126bb84828501612619565b60208301525060406126cf848285016127fa565b60408301525060606126e3848285016127fa565b606083015250608082013567ffffffffffffffff81111561270357600080fd5b61270f8482850161255b565b60808301525060a0612723848285016127fa565b60a08301525060c0612737848285016127fa565b60c08301525092915050565b600060e0828403121561275557600080fd5b61275f60e0612f81565b9050600061276d84846127fa565b825250602061277e84848301612410565b6020830152506040612792848285016127fa565b60408301525060606127a684828501612410565b60608301525060806127ba848285016127fa565b60808301525060a082013567ffffffffffffffff8111156127da57600080fd5b6127e68482850161246c565b60a08301525060c061273784828501612410565b600061241c8235611265565b60006020828403121561281857600080fd5b60006128248484612410565b949350505050565b6000806040838503121561283f57600080fd5b600061284b8585612410565b925050602061285c85828601612410565b9150509250929050565b60008060006060848603121561287b57600080fd5b60006128878686612410565b935050602061289886828701612410565b92505060406128a9868287016125cb565b9150509250925092565b6000602082840312156128c557600080fd5b600061282484846127fa565b600080604083850312156128e457600080fd5b600061284b85856127fa565b60008060006060848603121561290557600080fd5b600061291186866127fa565b935050602061292286828701612410565b92505060406128a986828701612410565b60008060006040848603121561294857600080fd5b600061295486866127fa565b935050602084013567ffffffffffffffff81111561297157600080fd5b61297d86828701612423565b92509250509250925092565b6000806040838503121561299c57600080fd5b60006129a885856127fa565b925050602061285c858286016125cb565b6000806000604084860312156129ce57600080fd5b60006129da86866127fa565b935050602084013567ffffffffffffffff8111156129f757600080fd5b61297d868287016125d7565b60008060408385031215612a1657600080fd5b6000612a2285856127fa565b925050602083013567ffffffffffffffff811115612a3f57600080fd5b61285c85828601612668565b60008060408385031215612a5e57600080fd5b6000612a6a85856127fa565b925050602083013567ffffffffffffffff811115612a8757600080fd5b61285c85828601612743565b60008060408385031215612aa657600080fd5b6000612ab285856127fa565b925050602061285c858286016127fa565b60008060008060008060c08789031215612adc57600080fd5b6000612ae889896127fa565b9650506020612af989828a016127fa565b955050604087013567ffffffffffffffff811115612b1657600080fd5b612b2289828a016124eb565b9450506060612b3389828a01612410565b935050608087013567ffffffffffffffff811115612b5057600080fd5b612b5c89828a01612619565b92505060a0612b6d89828a016127fa565b9150509295509295509295565b6000612b868383612b9a565b505060200190565b6000612b868383612ebf565b612ba381613004565b82525050565b6000612bb482612ff7565b612bbe8185612ffb565b9350612bc983612ff1565b60005b82811015612bf457612bdf868351612b7a565b9550612bea82612ff1565b9150600101612bcc565b5093949350505050565b6000612c0982612ff7565b612c138185612ffb565b9350612c1e83612ff1565b60005b82811015612bf457612c34868351612b8e565b9550612c3f82612ff1565b9150600101612c21565b612ba38161300f565b6000612c5d82612ff7565b612c678185612ffb565b9350612c7781856020860161302c565b612c8081613058565b9093019392505050565b6000612c97601883612ffb565b7f307830206173206f776e6572206e6f7420616c6c6f7765640000000000000000815260200192915050565b6000612cd0601783612ffb565b7f6d73672e73656e646572206973206e6f74206f776e6572000000000000000000815260200192915050565b6000612d09602483612ffb565b7f6e6f742074686520636f6e747261637420697473656c66206f7220746865206f81527f776e657200000000000000000000000000000000000000000000000000000000602082015260400192915050565b805160009060e0840190612d6f8582612c49565b5060208301518482036020860152612d878282612c52565b9150506040830151612d9c6040860182612ebf565b506060830151612daf6060860182612ebf565b5060808301518482036080860152612dc78282612bfe565b91505060a0830151612ddc60a0860182612ebf565b5060c0830151612def60c0860182612ebf565b509392505050565b8051604080845260009190840190612e0f8282612e32565b91505060208301518482036020860152612e298282612d5b565b95945050505050565b805160009060e0840190612e468582612ebf565b506020830151612e596020860182612b9a565b506040830151612e6c6040860182612ebf565b506060830151612e7f6060860182612b9a565b506080830151612e926080860182612ebf565b5060a083015184820360a0860152612eaa8282612ba9565b91505060c0830151612def60c0860182612b9a565b612ba381611265565b60208101610d458284612b9a565b60208101610d458284612c49565b6020808252810161241c8184612c52565b60208082528101610d4581612c8a565b60208082528101610d4581612cc3565b60208082528101610d4581612cfc565b6020808252810161241c8184612d5b565b6020808252810161241c8184612df7565b6020808252810161241c8184612e32565b60208101610d458284612ebf565b60408101612f748285612ebf565b61241c6020830184612ebf565b60405181810167ffffffffffffffff81118282101715612fa057600080fd5b604052919050565b600067ffffffffffffffff821115612fbf57600080fd5b5060209081020190565b600067ffffffffffffffff821115612fe057600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b6000610d4582613014565b151590565b600160a060020a031690565b82818337506000910152565b60005b8381101561304757818101518382015260200161302f565b83811115611e105750506000910152565b601f01601f19169056fea265627a7a723058202db5c339c8024b9d232000147c32d77694d581cd4f83b06b86c809973507de0a6c6578706572696d656e74616cf50037", "contractName": "CertificateDB", "deployedBytecode": "608060405234801561001057600080fd5b50600436106102c9576000357c0100000000000000000000000000000000000000000000000000000000900480638e556bc711610198578063bebc1e9c116100f5578063deadb867116100a9578063e09a72791161008e578063e09a7279146105cb578063e22e3e4b146105de578063fb79224f146105fe576102c9565b8063deadb867146105a5578063e01b1ba2146105b8576102c9565b8063c365d3f0116100da578063c365d3f01461055e578063d45c612d14610571578063de1fabc514610584576102c9565b8063bebc1e9c14610538578063c2d3bc051461054b576102c9565b8063af2773951161014c578063b88c171d11610131578063b88c171d146104ff578063b95e12e714610512578063bc380fef14610525576102c9565b8063af277395146104e4578063b65e6a3c146104ec576102c9565b80639db9df2c1161017d5780639db9df2c146104ab578063a224a84d146104be578063a6f9dae1146104d1576102c9565b80638e556bc7146104785780639b96eece14610498576102c9565b80634f51ef021161024657806372febb79116101fa57806381bd5601116101df57806381bd56011461043d57806383ede6791461045d5780638da5cb5b14610470576102c9565b806372febb791461041757806376e0a8941461042a576102c9565b806351ba60d71161022b57806351ba60d7146103de57806354e3043c146103f157806365a8fc4914610404576102c9565b80634f51ef02146103ab57806351640fee146103be576102c9565b80631273938b1161029d578063171d838811610282578063171d8388146103655780633660f1d9146103785780633f271fe014610398576102c9565b80631273938b1461033257806314663cef14610352576102c9565b80629df41e146102ce578063081812fc146102f75780630d473bd41461030a5780630e4a07e11461031f575b600080fd5b6102e16102dc3660046128b3565b610611565b6040516102ee9190612ec8565b60405180910390f35b6102e16103053660046128b3565b61065b565b61031d6103183660046128d1565b61069c565b005b61031d61032d366004612933565b61071a565b6103456103403660046128b3565b610789565b6040516102ee9190612f58565b61031d6103603660046129b9565b6107cb565b6103456103733660046128b3565b61081a565b61038b6103863660046128b3565b61085b565b6040516102ee9190612ed6565b61031d6103a63660046128f0565b61089c565b61031d6103b9366004612a93565b6108dd565b6103d16103cc3660046128b3565b610916565b6040516102ee9190612f36565b61031d6103ec3660046128d1565b610b6e565b61031d6103ff366004612a93565b610ba9565b610345610412366004612ac3565b610bec565b61038b61042536600461282c565b610cec565b61031d6104383660046128d1565b610d4b565b61045061044b3660046128b3565b610d82565b6040516102ee9190612f47565b61031d61046b366004612a93565b610ea0565b6102e1610ed7565b61048b6104863660046128b3565b610ee6565b6040516102ee9190612f25565b6103456104a6366004612806565b61109e565b61031d6104b9366004612989565b6110e8565b61031d6104cc366004612a93565b611134565b61031d6104df366004612806565b611177565b610345611232565b6103456104fa3660046128b3565b611268565b61031d61050d3660046128b3565b6112a9565b61031d610520366004612a93565b61130a565b61031d610533366004612a03565b61135a565b61031d610546366004612866565b61142f565b6103456105593660046128b3565b611496565b61038b61056c3660046128d1565b6114d7565b61031d61057f366004612a4b565b6115ee565b610597610592366004612a93565b6116fd565b6040516102ee929190612f66565b61031d6105b33660046128d1565b611b48565b61031d6105c6366004612a93565b611bb3565b6103456105d93660046128b3565b611c76565b6105f16105ec3660046128b3565b611cb7565b6040516102ee9190612ee4565b6102e161060c3660046128b3565b611d83565b60008054600160a060020a031633146106485760405160e560020a62461bcd02815260040161063f90612f05565b60405180910390fd5b61065182610d82565b6020015192915050565b60008054600160a060020a031633146106895760405160e560020a62461bcd02815260040161063f90612f05565b61069282610d82565b60c0015192915050565b600054600160a060020a031633146106c95760405160e560020a62461bcd02815260040161063f90612f05565b60006106d483611dc4565b60050180546001810182556000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0393909316929092179091555050565b600054600160a060020a031633146107475760405160e560020a62461bcd02815260040161063f90612f05565b61078483838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ded92505050565b505050565b60008054600160a060020a031633146107b75760405160e560020a62461bcd02815260040161063f90612f05565b6107c082610d82565b60a001515192915050565b600054600160a060020a031633146107f85760405160e560020a62461bcd02815260040161063f90612f05565b600061080384611e16565b905061081360018201848461216b565b5050505050565b60008054600160a060020a031633146108485760405160e560020a62461bcd02815260040161063f90612f05565b61085182611e16565b6006015492915050565b60008054600160a060020a031633146108895760405160e560020a62461bcd02815260040161063f90612f05565b61089282611e16565b5460ff1692915050565b600054600160a060020a031633146108c95760405160e560020a62461bcd02815260040161063f90612f05565b6108d38383611e3f565b6107848382611e85565b600054600160a060020a03163314806108f557503330145b151561090057600080fd5b600061090b83611e16565b600601919091555050565b61091e6121e9565b600054600160a060020a0316331461094b5760405160e560020a62461bcd02815260040161063f90612f05565b600380548390811061095957fe5b60009182526020918290206040805161012081018252600e90930290910180548383019081526001820154600160a060020a0390811660608601526002830154608086015260038301541660a0850152600482015460c08501526005820180548451818802810188019095528085529495929486949293869360e087019390929091830182828015610a1457602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116109f6575b505050918352505060069190910154600160a060020a03166020918201529082526040805160e08101825260078501805460ff1615158252600886018054845160026101006001841615026000190190921691909104601f810187900487028201870190955284815295850195929491938583019392830182828015610adb5780601f10610ab057610100808354040283529160200191610adb565b820191906000526020600020905b815481529060010190602001808311610abe57829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020018280548015610b4757602002820191906000526020600020905b815481526020019060010190808311610b33575b50505091835250506005820154602082015260069091015460409091015290525092915050565b600054600160a060020a03163314610b9b5760405160e560020a62461bcd02815260040161063f90612f05565b610ba58282611e85565b5050565b600054600160a060020a03163314610bd65760405160e560020a62461bcd02815260040161063f90612f05565b6000610be183611dc4565b600401919091555050565b60008054600160a060020a03163314610c1a5760405160e560020a62461bcd02815260040161063f90612f05565b610c22612210565b506040805160e081018252888152600160a060020a03861660208201529081018790526000606082018190526080820181905260a0820187905260c0820152610c6961224b565b60e060405190810160405280600015158152602001868152602001428152602001610c92611232565b81526020016000604051908082528060200260200182016040528015610cc2578160200160208202803883390190505b50815260200185815260200160008152509050610cdf8282611ec3565b9998505050505050505050565b60008054600160a060020a03163314610d1a5760405160e560020a62461bcd02815260040161063f90612f05565b50600160a060020a0380831660009081526002602090815260408083209385168352929052205460ff165b92915050565b600054600160a060020a03163314610d785760405160e560020a62461bcd02815260040161063f90612f05565b610ba58282611e3f565b610d8a612210565b600054600160a060020a0316331480610da257503330145b1515610dc35760405160e560020a62461bcd02815260040161063f90612f15565b6003805483908110610dd157fe5b60009182526020918290206040805160e081018252600e909302909101805483526001810154600160a060020a03908116848601526002820154848401526003820154166060840152600481015460808401526005810180548351818702810187019094528084529394919360a086019392830182828015610e7c57602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610e5e575b505050918352505060069190910154600160a060020a031660209091015292915050565b600054600160a060020a03163314610ecd5760405160e560020a62461bcd02815260040161063f90612f05565b610ba5828261130a565b600054600160a060020a031681565b610eee61224b565b600054600160a060020a0316331480610f0657503330145b1515610f275760405160e560020a62461bcd02815260040161063f90612f15565b600054600160a060020a0316331480610f3f57503330145b1515610f4a57600080fd5b6003805483908110610f5857fe5b60009182526020918290206040805160e0810182526007600e909402909201928301805460ff1615158352600890930180548251601f600260001960018516156101000201909316929092049182018790048702810187019093528083529294858101939083018282801561100e5780601f10610fe35761010080835404028352916020019161100e565b820191906000526020600020905b815481529060010190602001808311610ff157829003601f168201915b5050505050815260200160028201548152602001600382015481526020016004820180548060200260200160405190810160405280929190818152602001828054801561107a57602002820191906000526020600020905b815481526020019060010190808311611066575b50505050508152602001600582015481526020016006820154815250509050919050565b60008054600160a060020a031633146110cc5760405160e560020a62461bcd02815260040161063f90612f05565b50600160a060020a031660009081526001602052604090205490565b600054600160a060020a031633146111155760405160e560020a62461bcd02815260040161063f90612f05565b600061112083611e16565b805460ff1916921515929092179091555050565b600054600160a060020a031633146111615760405160e560020a62461bcd02815260040161063f90612f05565b600061116c83611e16565b600501919091555050565b600054600160a060020a031633146111a45760405160e560020a62461bcd02815260040161063f90612f05565b600160a060020a03811615156111cf5760405160e560020a62461bcd02815260040161063f90612ef5565b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790556040517f95fd54179c11867fb083dd94347ea50f144dd4cfd7612b7bca169f162824af1690611227908390612ec8565b60405180910390a150565b60008054600160a060020a031633146112605760405160e560020a62461bcd02815260040161063f90612f05565b506003545b90565b60008054600160a060020a031633146112965760405160e560020a62461bcd02815260040161063f90612f05565b61129f82611e16565b6005015492915050565b600054600160a060020a031633146112d65760405160e560020a62461bcd02815260040161063f90612f05565b60006112e182611dc4565b60006004820155600301805473ffffffffffffffffffffffffffffffffffffffff191690555050565b600054600160a060020a031633146113375760405160e560020a62461bcd02815260040161063f90612f05565b61134082611e16565b600401805460018101825560009182526020909120015550565b600054600160a060020a031633148061137257503330145b15156113935760405160e560020a62461bcd02815260040161063f90612f15565b806003838154811015156113a357fe5b60009182526020918290208351600e929092020160078101805460ff191692151592909217825583830151805192936113e49360089093019291019061228b565b506040820151600282015560608201516003820155608082015180516114149160048401916020909101906122f9565b5060a0820151600582015560c0909101516006909101555050565b600054600160a060020a0316331461145c5760405160e560020a62461bcd02815260040161063f90612f05565b600160a060020a03928316600090815260026020908152604080832094909516825292909252919020805460ff1916911515919091179055565b60008054600160a060020a031633146114c45760405160e560020a62461bcd02815260040161063f90612f05565b6114cd82611e16565b6004015492915050565b60008054600160a060020a031633146115055760405160e560020a62461bcd02815260040161063f90612f05565b600061151084611dc4565b600501905060005b81548110156115e65783600160a060020a0316828281548110151561153957fe5b600091825260209091200154600160a060020a031614156115de5781548290600019810190811061156657fe5b6000918252602090912001548254600160a060020a039091169083908390811061158c57fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905581546115d2836000198301612333565b50600192505050610d45565b600101611518565b505092915050565b600054600160a060020a031633148061160657503330145b15156116275760405160e560020a62461bcd02815260040161063f90612f15565b8060038381548110151561163757fe5b60009182526020918290208351600e9092020190815582820151600182018054600160a060020a0392831673ffffffffffffffffffffffffffffffffffffffff19918216179091556040850151600284015560608501516003840180549190931691161790556080830151600482015560a0830151805191926116c292600585019290910190612357565b5060c091909101516006909101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039092169190911790555050565b600080548190600160a060020a0316331461172d5760405160e560020a62461bcd02815260040161063f90612f05565b6117356121e9565b600380548690811061174357fe5b60009182526020918290206040805161012081018252600e90930290910180548383019081526001820154600160a060020a0390811660608601526002830154608086015260038301541660a0850152600482015460c08501526005820180548451818802810188019095528085529495929486949293869360e0870193909290918301828280156117fe57602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116117e0575b505050918352505060069190910154600160a060020a03166020918201529082526040805160e08101825260078501805460ff1615158252600886018054845160026101006001841615026000190190921691909104601f8101879004870282018701909552848152958501959294919385830193928301828280156118c55780601f1061189a576101008083540402835291602001916118c5565b820191906000526020600020905b8154815290600101906020018083116118a857829003601f168201915b5050505050815260200160028201548152602001600382015481526020016004820180548060200260200160405190810160405280929190818152602001828054801561193157602002820191906000526020600020905b81548152602001906001019080831161191d575b505050505081526020016005820154815260200160068201548152505081525050905061195c612210565b60e0604051908101604052808360000151600001518152602001836000015160200151600160a060020a031681526020018681526020016000600160a060020a0316815260200160008152602001836000015160a001518152602001836000015160c00151600160a060020a031681525090506119d761224b565b506040805160e08101825260008082526020858101805182015182850152805185015184860152606084018b905284519283529082019093526080820152815160a09081015190820152905160c09081015190820152611a378282611ec3565b9450611a41612210565b60e0604051908101604052808560000151600001518152602001856000015160200151600160a060020a03168152602001888660000151604001510381526020016000600160a060020a0316815260200160008152602001856000015160a001518152602001856000015160c00151600160a060020a03168152509050611ac661224b565b506040805160e08101825260008082526020878101805182015182850152805185015184860152606084018d905284519283529082019093526080820152815160a09081015190820152905160c09081015190820152611b268282611ec3565b9550611b32898861130a565b611b3c898761130a565b50505050509250929050565b600054600160a060020a03163314611b755760405160e560020a62461bcd02815260040161063f90612f05565b6000611b8083611dc4565b600301805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0393909316929092179091555050565b600054600160a060020a0316331480611bcb57503330145b1515611bec5760405160e560020a62461bcd02815260040161063f90612f15565b6040517f4f51ef020000000000000000000000000000000000000000000000000000000081523090634f51ef0290611c2a9085908590600401612f66565b600060405180830381600087803b158015611c4457600080fd5b505af1158015611c58573d6000803e3d6000fd5b5050604080516000815260208101909152610ba59250849150611ded565b60008054600160a060020a03163314611ca45760405160e560020a62461bcd02815260040161063f90612f05565b611cad82610d82565b6080015192915050565b600054606090600160a060020a03163314611ce75760405160e560020a62461bcd02815260040161063f90612f05565b611cf082611e16565b60019081018054604080516020600295841615610100026000190190931694909404601f810183900483028501830190915280845290830182828015611d775780601f10611d4c57610100808354040283529160200191611d77565b820191906000526020600020905b815481529060010190602001808311611d5a57829003601f168201915b50505050509050919050565b60008054600160a060020a03163314611db15760405160e560020a62461bcd02815260040161063f90612f05565b611dba82610d82565b6060015192915050565b6000600382815481101515611dd557fe5b90600052602060002090600e02016000019050919050565b6000611df883611dc4565b8251909150611e109060058301906020850190612357565b50505050565b6000600382815481101515611e2757fe5b90600052602060002090600e02016007019050919050565b6000611e4a83611dc4565b600181018054600160a060020a0385811673ffffffffffffffffffffffffffffffffffffffff1983161790925591925016611e108184612114565b6000611e9083611dc4565b600601805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0393909316929092179091555050565b60408051808201825283815260208082018490526003805460018082018084556000938452855180517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b600e909502948501908155818701517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c8601805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a0393841617909155998301517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d87015560608301517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e87018054909b1691161790985560808101517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85f85015560a081015180519598939792969295939491938593612030937fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f86001920190612357565b5060c091909101516006909101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055602082810151805160078401805460ff19169115159190911781558183015180519293919261209c926008870192019061228b565b506040820151600282015560608201516003820155608082015180516120cc9160048401916020909101906122f9565b5060a0820151600582015560c0909101516006909101555050602094850151600160a060020a0316600090815260019586905260409020805490950190945590920392915050565b600160a060020a0382166000908152600160205260408120541161213757600080fd5b600160a060020a03918216600090815260016020819052604080832080546000190190559290931681522080549091019055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106121ac5782800160ff198235161785556121d9565b828001600101855582156121d9579182015b828111156121d95782358255916020019190600101906121be565b506121e59291506123c5565b5090565b6101c0604051908101604052806121fe612210565b815260200161220b61224b565b905290565b6040805160e08101825260008082526020820181905291810182905260608082018390526080820183905260a082015260c081019190915290565b60e0604051908101604052806000151581526020016060815260200160008152602001600081526020016060815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106122cc57805160ff19168380011785556121d9565b828001600101855582156121d9579182015b828111156121d95782518255916020019190600101906122de565b8280548282559060005260206000209081019282156121d957916020028201828111156121d95782518255916020019190600101906122de565b815481835581811115610784576000838152602090206107849181019083016123c5565b8280548282559060005260206000209081019282156123b9579160200282015b828111156123b9578251825473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909116178255602090920191600190910190612377565b506121e59291506123df565b61126591905b808211156121e557600081556001016123cb565b61126591905b808211156121e557805473ffffffffffffffffffffffffffffffffffffffff191681556001016123e5565b600061241c8235613004565b9392505050565b600080601f8301841361243557600080fd5b50813567ffffffffffffffff81111561244d57600080fd5b60208301915083602082028301111561246557600080fd5b9250929050565b6000601f8201831361247d57600080fd5b813561249061248b82612fa8565b612f81565b915081818352602084019350602081019050838560208402820111156124b557600080fd5b60005b838110156124e157816124cb8882612410565b84525060209283019291909101906001016124b8565b5050505092915050565b6000601f820183136124fc57600080fd5b813561250a61248b82612fa8565b9150818183526020840193506020810190508385602084028201111561252f57600080fd5b60005b838110156124e157816125458882612410565b8452506020928301929190910190600101612532565b6000601f8201831361256c57600080fd5b813561257a61248b82612fa8565b9150818183526020840193506020810190508385602084028201111561259f57600080fd5b60005b838110156124e157816125b588826127fa565b84525060209283019291909101906001016125a2565b600061241c823561300f565b600080601f830184136125e957600080fd5b50813567ffffffffffffffff81111561260157600080fd5b60208301915083600182028301111561246557600080fd5b6000601f8201831361262a57600080fd5b813561263861248b82612fc9565b9150808252602083016020830185838301111561265457600080fd5b61265f838284613020565b50505092915050565b600060e0828403121561267a57600080fd5b61268460e0612f81565b9050600061269284846125cb565b825250602082013567ffffffffffffffff8111156126af57600080fd5b6126bb84828501612619565b60208301525060406126cf848285016127fa565b60408301525060606126e3848285016127fa565b606083015250608082013567ffffffffffffffff81111561270357600080fd5b61270f8482850161255b565b60808301525060a0612723848285016127fa565b60a08301525060c0612737848285016127fa565b60c08301525092915050565b600060e0828403121561275557600080fd5b61275f60e0612f81565b9050600061276d84846127fa565b825250602061277e84848301612410565b6020830152506040612792848285016127fa565b60408301525060606127a684828501612410565b60608301525060806127ba848285016127fa565b60808301525060a082013567ffffffffffffffff8111156127da57600080fd5b6127e68482850161246c565b60a08301525060c061273784828501612410565b600061241c8235611265565b60006020828403121561281857600080fd5b60006128248484612410565b949350505050565b6000806040838503121561283f57600080fd5b600061284b8585612410565b925050602061285c85828601612410565b9150509250929050565b60008060006060848603121561287b57600080fd5b60006128878686612410565b935050602061289886828701612410565b92505060406128a9868287016125cb565b9150509250925092565b6000602082840312156128c557600080fd5b600061282484846127fa565b600080604083850312156128e457600080fd5b600061284b85856127fa565b60008060006060848603121561290557600080fd5b600061291186866127fa565b935050602061292286828701612410565b92505060406128a986828701612410565b60008060006040848603121561294857600080fd5b600061295486866127fa565b935050602084013567ffffffffffffffff81111561297157600080fd5b61297d86828701612423565b92509250509250925092565b6000806040838503121561299c57600080fd5b60006129a885856127fa565b925050602061285c858286016125cb565b6000806000604084860312156129ce57600080fd5b60006129da86866127fa565b935050602084013567ffffffffffffffff8111156129f757600080fd5b61297d868287016125d7565b60008060408385031215612a1657600080fd5b6000612a2285856127fa565b925050602083013567ffffffffffffffff811115612a3f57600080fd5b61285c85828601612668565b60008060408385031215612a5e57600080fd5b6000612a6a85856127fa565b925050602083013567ffffffffffffffff811115612a8757600080fd5b61285c85828601612743565b60008060408385031215612aa657600080fd5b6000612ab285856127fa565b925050602061285c858286016127fa565b60008060008060008060c08789031215612adc57600080fd5b6000612ae889896127fa565b9650506020612af989828a016127fa565b955050604087013567ffffffffffffffff811115612b1657600080fd5b612b2289828a016124eb565b9450506060612b3389828a01612410565b935050608087013567ffffffffffffffff811115612b5057600080fd5b612b5c89828a01612619565b92505060a0612b6d89828a016127fa565b9150509295509295509295565b6000612b868383612b9a565b505060200190565b6000612b868383612ebf565b612ba381613004565b82525050565b6000612bb482612ff7565b612bbe8185612ffb565b9350612bc983612ff1565b60005b82811015612bf457612bdf868351612b7a565b9550612bea82612ff1565b9150600101612bcc565b5093949350505050565b6000612c0982612ff7565b612c138185612ffb565b9350612c1e83612ff1565b60005b82811015612bf457612c34868351612b8e565b9550612c3f82612ff1565b9150600101612c21565b612ba38161300f565b6000612c5d82612ff7565b612c678185612ffb565b9350612c7781856020860161302c565b612c8081613058565b9093019392505050565b6000612c97601883612ffb565b7f307830206173206f776e6572206e6f7420616c6c6f7765640000000000000000815260200192915050565b6000612cd0601783612ffb565b7f6d73672e73656e646572206973206e6f74206f776e6572000000000000000000815260200192915050565b6000612d09602483612ffb565b7f6e6f742074686520636f6e747261637420697473656c66206f7220746865206f81527f776e657200000000000000000000000000000000000000000000000000000000602082015260400192915050565b805160009060e0840190612d6f8582612c49565b5060208301518482036020860152612d878282612c52565b9150506040830151612d9c6040860182612ebf565b506060830151612daf6060860182612ebf565b5060808301518482036080860152612dc78282612bfe565b91505060a0830151612ddc60a0860182612ebf565b5060c0830151612def60c0860182612ebf565b509392505050565b8051604080845260009190840190612e0f8282612e32565b91505060208301518482036020860152612e298282612d5b565b95945050505050565b805160009060e0840190612e468582612ebf565b506020830151612e596020860182612b9a565b506040830151612e6c6040860182612ebf565b506060830151612e7f6060860182612b9a565b506080830151612e926080860182612ebf565b5060a083015184820360a0860152612eaa8282612ba9565b91505060c0830151612def60c0860182612b9a565b612ba381611265565b60208101610d458284612b9a565b60208101610d458284612c49565b6020808252810161241c8184612c52565b60208082528101610d4581612c8a565b60208082528101610d4581612cc3565b60208082528101610d4581612cfc565b6020808252810161241c8184612d5b565b6020808252810161241c8184612df7565b6020808252810161241c8184612e32565b60208101610d458284612ebf565b60408101612f748285612ebf565b61241c6020830184612ebf565b60405181810167ffffffffffffffff81118282101715612fa057600080fd5b604052919050565b600067ffffffffffffffff821115612fbf57600080fd5b5060209081020190565b600067ffffffffffffffff821115612fe057600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b6000610d4582613014565b151590565b600160a060020a031690565b82818337506000910152565b60005b8381101561304757818101518382015260200161302f565b83811115611e105750506000910152565b601f01601f19169056fea265627a7a723058202db5c339c8024b9d232000147c32d77694d581cd4f83b06b86c809973507de0a6c6578706572696d656e74616cf50037", "source": "// Copyright 2018 Energy Web Foundation\n// This file is part of the Origin Application brought to you by the Energy Web Foundation,\n// a global non-profit organization focused on accelerating blockchain technology across the energy sector,\n// incorporated in Zug, Switzerland.\n//\n// The Origin Application is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// This is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY and without an implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details, at <http://www.gnu.org/licenses/>.\n//\n// @authors: slock.it GmbH; Martin Kuechler, martin.kuchler@slock.it; Heiko Burkhardt, heiko.burkhardt@slock.it;\n\npragma solidity ^0.5.2;\npragma experimental ABIEncoderV2;\n\n/// @title The Database contract for the Certificate of Origin list\n/// @notice This contract only provides getter and setter methods\n\nimport \"../../contracts/Origin/TradableEntityContract.sol\";\nimport \"../../contracts/Origin/TradableEntityDB.sol\";\nimport \"../../contracts/Origin/CertificateSpecificContract.sol\";\nimport \"../../contracts/Origin/CertificateSpecificDB.sol\";\n\ncontract CertificateDB is TradableEntityDB, CertificateSpecificContract, CertificateSpecificDB {\n\n    struct Certificate {\n        TradableEntityContract.TradableEntity tradableEntity;\n        CertificateSpecific certificateSpecific;\n    }\n\n    modifier onlyOwnerOrSelf {\n        require(msg.sender == owner || msg.sender == address(this),\"not the contract itself or the owner\");\n        _;\n    }\n\n    /// @notice An array containing all created certificates\n    Certificate[] private certificateList;\n\n    /// @notice Constructor\n    /// @param _certificateLogic The address of the corresbonding logic contract\n    constructor(address _certificateLogic) TradableEntityDB(_certificateLogic) public { }\n\n    /**\n        external functions\n    */\n    /// @notice sets the counter of owner changes and resets all escrows\n    /// @dev should be called whenever a certificate gets transfered\n    /// @param _certificateId array-position of the certificate\n    /// @param _newCounter new counter of owner changes\n    function setOwnerChangeCounterResetEscrow(\n        uint _certificateId,\n        uint _newCounter\n    )\n        external\n        onlyOwnerOrSelf\n    {\n        this.setOwnerChangeCounter(_certificateId, _newCounter);\n        setTradableEntityEscrow(_certificateId, new address[](0));\n    }\n\n    /// @notice gets the certificate-specific struct of a certificate\n    /// @param _certificateId the id of the certificate\n    /// @return certificate-specific struct as memory\n    function getCertificateSpecific(uint _certificateId)\n        external\n        onlyOwnerOrSelf\n        view\n        returns (CertificateSpecificContract.CertificateSpecific memory _certificate)\n    {\n        require(msg.sender == owner || msg.sender == address(this));\n        return certificateList[_certificateId].certificateSpecific;\n    }\n\n    /**\n        public functions\n    */\n\n    /// @notice creates a certificate with the provided parameters\n    /// @param _assetId the asset-id that produced energy thus created the certificate\n    /// @param _powerInW the power in wh\n    /// @param _escrow array with escrow-addresses\n    /// @param _assetOwner the assetOwner -> owner of the new certificate\n    /// @param _lastSmartMeterReadFileHash the filehash of the last meterreading\n    /// @param _maxOwnerChanges the maximal amount of owner changes\n    function createCertificateRaw(\n        uint _assetId,\n        uint _powerInW,\n        address[] memory _escrow,\n        address _assetOwner,\n        string memory _lastSmartMeterReadFileHash,\n        uint _maxOwnerChanges\n    )\n        public\n        onlyOwner\n        returns (uint _certId)\n    {\n        TradableEntityContract.TradableEntity memory tradableEntity = TradableEntityContract.TradableEntity({\n            assetId: _assetId,\n            owner: _assetOwner,\n            powerInW: _powerInW,\n            acceptedToken: address(0x0),\n            onChainDirectPurchasePrice: 0,\n            escrow: _escrow,\n           // escrow: new address[](0),\n            approvedAddress: address(0x0)\n\n        });\n\n\n        CertificateDB.CertificateSpecific memory certificateSpecific= CertificateSpecific({\n            retired: false,\n            dataLog: _lastSmartMeterReadFileHash,\n            creationTime: block.timestamp,\n            parentId: getCertificateListLength(),\n            children: new uint256[](0),\n            maxOwnerChanges: _maxOwnerChanges,\n            ownerChangeCounter: 0\n        });\n\n\n        _certId = createCertificate(\n            tradableEntity,\n            certificateSpecific\n        );\n    }\n\n    /// @notice Creates 2 new children certificates\n    /// @param _parentId the id of the parent certificate\n    /// @param _power the power that should be splitted\n    /// @return The ids of the certificate\n    function createChildCertificate(\n        uint _parentId,\n        uint _power\n    )\n        public\n        onlyOwner\n        returns\n        (uint _childIdOne, uint _childIdTwo)\n    {\n        Certificate memory parent = certificateList[_parentId];\n\n        TradableEntityContract.TradableEntity memory childOneEntity = TradableEntityContract.TradableEntity({\n            assetId: parent.tradableEntity.assetId,\n            owner: parent.tradableEntity.owner,\n            powerInW: _power,\n            acceptedToken: address(0x0),\n            onChainDirectPurchasePrice: 0,\n            escrow: parent.tradableEntity.escrow,\n            approvedAddress: parent.tradableEntity.approvedAddress\n        });\n\n        CertificateDB.CertificateSpecific memory certificateSpecificOne = CertificateSpecific({\n            retired: false,\n            dataLog: parent.certificateSpecific.dataLog,\n            creationTime: parent.certificateSpecific.creationTime,\n            parentId: _parentId,\n            children: new uint256[](0),\n            maxOwnerChanges: parent.certificateSpecific.maxOwnerChanges,\n            ownerChangeCounter: parent.certificateSpecific.ownerChangeCounter\n        });\n\n        _childIdOne = createCertificate(\n            childOneEntity,\n            certificateSpecificOne\n        );\n\n        TradableEntityContract.TradableEntity memory childTwoEntity = TradableEntityContract.TradableEntity({\n            assetId: parent.tradableEntity.assetId,\n            owner: parent.tradableEntity.owner,\n            powerInW: parent.tradableEntity.powerInW - _power,\n            acceptedToken: address(0x0),\n            onChainDirectPurchasePrice: 0,\n            escrow: parent.tradableEntity.escrow,\n            approvedAddress: parent.tradableEntity.approvedAddress\n        });\n\n        CertificateSpecific memory certificateSpecificTwo = CertificateSpecific({\n            retired: false,\n            dataLog: parent.certificateSpecific.dataLog,\n            creationTime: parent.certificateSpecific.creationTime,\n            parentId: _parentId,\n            children: new uint256[](0),\n            maxOwnerChanges: parent.certificateSpecific.maxOwnerChanges,\n            ownerChangeCounter: parent.certificateSpecific.ownerChangeCounter\n        });\n\n        _childIdTwo = createCertificate(\n            childTwoEntity,\n            certificateSpecificTwo\n        );\n        addChildren(_parentId, _childIdOne);\n        addChildren(_parentId, _childIdTwo);\n\n    }\n\n    /// @notice Returns the certificate that corresponds to the given array id\n    /// @param _certificateId The array position in which the certificate is stored\n    /// @return Certificate as struct\n    function getCertificate(uint _certificateId)\n        public\n        onlyOwner\n        view\n        returns (Certificate memory)\n    {\n        return certificateList[_certificateId];\n    }\n\n    /// @notice function to get the amount of all certificates\n    /// @return the amount of all certificates\n    function getCertificateListLength() public onlyOwner view returns (uint) {\n        return certificateList.length;\n    }\n\n    /// @notice gets the TradableEntity struct\n    /// @dev has to be implemented to create bytecode\n    /// @param _entityId the id of the entity/certificate\n    /// @return TradableEntity struct as memory\n    function getTradableEntity(\n        uint _entityId\n    )\n        public\n        onlyOwnerOrSelf\n        view\n        returns (TradableEntityContract.TradableEntity memory)\n    {\n        return certificateList[_entityId].tradableEntity;\n    }\n\n    /// @notice sets the TradableEntity of an entity\n    /// @dev has to be implemented to create bytecode\n    /// @param _entityId the if of the entity/certificate\n    /// @param _entity the new entity\n    function setTradableEntity(\n        uint _entityId,\n        TradableEntityContract.TradableEntity memory _entity\n    )\n        public\n        onlyOwnerOrSelf\n    {\n        certificateList[_entityId].tradableEntity = _entity;\n    }\n\n    /// @notice sets the certificate-specific struct of a certificate\n    /// @param _certificateId the id of the certificate\n    /// @param _certificate the new certificate-specific struct\n    function setCertificateSpecific(\n        uint _certificateId,\n        CertificateSpecificContract.CertificateSpecific memory _certificate\n    )\n        public\n        onlyOwnerOrSelf\n    {\n        certificateList[_certificateId].certificateSpecific = _certificate;\n    }\n\n    /**\n        internal functions\n     */\n    /// @notice Creates a new certificate\n    /// @param _tradableEntity The tradeable entity specific properties\n    /// @param _certificateSpecific The certificate specific properties\n    /// @return The id of the certificate\n    function createCertificate(\n        TradableEntityContract.TradableEntity memory _tradableEntity,\n        CertificateSpecific memory _certificateSpecific\n    )\n        internal\n        returns\n        (uint _certId)\n    {\n        _certId = certificateList.push(\n            Certificate(\n                _tradableEntity,\n                _certificateSpecific\n            )\n        ) - 1;\n        tokenAmountMapping[_tradableEntity.owner]++;\n    }\n\n    /// @notice gets the certificate-speciic struct of an certificate as storage\n    /// @param _certificateId the id of the certificate\n    /// @return the certificate-specific struct as as storage\n    function getCertificateInternally(\n        uint _certificateId\n    )\n        internal\n        view\n        returns (CertificateSpecificContract.CertificateSpecific storage _certificate)\n    {\n        return certificateList[_certificateId].certificateSpecific;\n    }\n\n    /// @notice get the TradableEntity struct\n    /// @dev has to be implemented to create bytecode\n    /// @param _entityId the id of the entity/certificate\n    /// @return TradableEntity struct as storage\n    function getTradableEntityInternally(\n        uint _entityId\n    )\n        internal\n        view\n        returns (TradableEntityContract.TradableEntity storage _entity)\n    {\n        return certificateList[_entityId].tradableEntity;\n    }\n}\n", "networks": "{}" }
