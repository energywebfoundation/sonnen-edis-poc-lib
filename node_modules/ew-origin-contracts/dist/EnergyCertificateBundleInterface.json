{"abi":[{"constant":true,"inputs":[],"name":"getBundleListLength","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_bundleId","type":"uint256"},{"name":"_escrow","type":"address"}],"name":"addEscrowForAsset","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_bundleId","type":"uint256"}],"name":"getBundle","outputs":[{"components":[{"components":[{"name":"assetId","type":"uint256"},{"name":"owner","type":"address"},{"name":"powerInW","type":"uint256"},{"name":"acceptedToken","type":"address"},{"name":"onChainDirectPurchasePrice","type":"uint256"},{"name":"escrow","type":"address[]"},{"name":"approvedAddress","type":"address"}],"name":"tradableEntity","type":"tuple"},{"components":[{"name":"retired","type":"bool"},{"name":"dataLog","type":"string"},{"name":"creationTime","type":"uint256"},{"name":"parentId","type":"uint256"},{"name":"children","type":"uint256[]"},{"name":"maxOwnerChanges","type":"uint256"},{"name":"ownerChangeCounter","type":"uint256"}],"name":"certificateSpecific","type":"tuple"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_bundleId","type":"uint256"}],"name":"getBundleOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_bundleId","type":"uint256"}],"name":"retireBundle","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_bundleId","type":"uint256"},{"name":"_escrow","type":"address"}],"name":"removeEscrow","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_bundleId","type":"uint256"}],"name":"isRetired","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"}],"bytecode":"","contractName":"EnergyCertificateBundleInterface","deployedBytecode":"","source":"// Copyright 2018 Energy Web Foundation\n// This file is part of the Origin Application brought to you by the Energy Web Foundation,\n// a global non-profit organization focused on accelerating blockchain technology across the energy sector,\n// incorporated in Zug, Switzerland.\n//\n// The Origin Application is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// This is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY and without an implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details, at <http://www.gnu.org/licenses/>.\n//\n// @authors: slock.it GmbH; Martin Kuechler, martin.kuchler@slock.it; Heiko Burkhardt, heiko.burkhardt@slock.it;\n\npragma solidity ^0.5.2;\npragma experimental ABIEncoderV2;\n\nimport \"../../contracts/Origin/EnergyCertificateBundleDB.sol\";\n\ninterface EnergyCertificateBundleInterface {\n\n    /// @notice adds an escrow for an asset\n    /// @param _bundleId the id of a bundle\n    /// @param _escrow the escrow addres\n    function addEscrowForAsset(uint _bundleId, address _escrow) external;\n\n    /// @notice retires a bundle\n    /// @param _bundleId the id of a bundle\n    function retireBundle(uint _bundleId) external;\n\n    /// @notice removes an escrow address for a bundle\n    /// @param _bundleId the id of a bundle\n    /// @param _escrow the escrow for a bundle\n    function removeEscrow(uint _bundleId, address _escrow) external;\n\n\n    /// @notice gets a bundle struct\n    /// @param _bundleId the id of a bundle\n    /// @return the EnergyCertificateBundle-struct\n    function getBundle(uint _bundleId) external view returns (EnergyCertificateBundleDB.EnergyCertificateBundle memory);\n\n    /// @notice gets the amount of bundles created\n    /// @return number of bundles created\n    function getBundleListLength() external view returns (uint);\n\n    /// @notice gets the owner of a bundle\n    /// @param _bundleId the id of a bundle\n    /// @return the owner of a bundle\n    function getBundleOwner(uint _bundleId) external view returns (address);\n\n    /// @notice gets whether a bundle is retired\n    /// @param _bundleId the id of a bundle\n    /// @return whether the bundle is retired yet\n    function isRetired(uint _bundleId) external view returns (bool);\n}\n","networks":"{}"}