import Web3 = require('web3');
import { Tx } from 'web3/eth/types';
import { TransactionReceipt, Logs } from 'web3/types';
export declare interface SpecialTx extends Tx {
    privateKey: string;
}
export declare interface SearchLog extends Logs {
    toBlock: number;
}
export declare function getClientVersion(web3: Web3): Promise<string>;
export declare function replayTransaction(web3: Web3, txHash: string): Promise<{}>;
export declare class GeneralFunctions {
    web3Contract: any;
    constructor(web3Contract: any);
    sendRaw(web3: Web3, privateKey: string, txParams: Tx): Promise<TransactionReceipt>;
    getWeb3Contract(): any;
    getErrorMessage(web3: Web3, txObj: Tx): Promise<string>;
}
